/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 5);
/******/ })
/************************************************************************/
/******/ ({

/***/ 5:
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(6);


/***/ }),

/***/ 6:
/***/ (function(module, exports) {

var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };

!function (e) {
  var t = {};function o(a) {
    if (t[a]) return t[a].exports;var i = t[a] = { i: a, l: !1, exports: {} };return e[a].call(i.exports, i, i.exports, o), i.l = !0, i.exports;
  }o.m = e, o.c = t, o.d = function (e, t, a) {
    o.o(e, t) || Object.defineProperty(e, t, { configurable: !1, enumerable: !0, get: a });
  }, o.n = function (e) {
    var t = e && e.__esModule ? function () {
      return e.default;
    } : function () {
      return e;
    };return o.d(t, "a", t), t;
  }, o.o = function (e, t) {
    return Object.prototype.hasOwnProperty.call(e, t);
  }, o.p = "", o(o.s = 3);
}([,,, function (e, t, o) {
  e.exports = o(4);
}, function (e, t) {
  var o = "function" == typeof Symbol && "symbol" == _typeof(Symbol.iterator) ? function (e) {
    return typeof e === "undefined" ? "undefined" : _typeof(e);
  } : function (e) {
    return e && "function" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? "symbol" : typeof e === "undefined" ? "undefined" : _typeof(e);
  };function a(e, t, o) {
    return t in e ? Object.defineProperty(e, t, { value: o, enumerable: !0, configurable: !0, writable: !0 }) : e[t] = o, e;
  }var l = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
      s = {},
      n = {},
      r = "",
      d = $("#drag-image2");function c(e, t) {
    $.ajax({ type: "POST", url: path + "/verify/membership_code", data: e, dataType: "json", success: function success(o) {
        "1" == e.step ? (1 == o.result && ($(".js_school_email").addClass("d-none"), $(".v-c-msg-sent, .v-c-s").removeClass("d-none"), $(".join-now-epc").hide(), $(".epc-join").find("p").html("Congratulations! you are an ETC member now. Stand by for news on discounts very soon!"), $("#uiJoinClubDailog .close").trigger("click")), 4 == o.result && ($(".js_school_email").addClass("d-none"), $(".v-c-msg-sent, .v-c-s").removeClass("d-none"), $(".join-now-epc").hide(), $(".epc-join").find("p").html("Congratulations! you are an Verified member now."), $("#uiJoinClubDailog .close").trigger("click")), 3 == o.result && (t.html("Confirm Verfication Code"), $(".v_code_error").html("Incorrect verification code. Please use correct code sent to your email address").removeClass("d-none")), 2 == o.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal())) : (1 == o.result && ($(".v-code-update-div").addClass("d-none"), $(".v-code-email-div").removeClass("d-none"), $(".epc-join").find("p").html("Your school email address is updates successfully."), t.html("Confirm Verfication Code").addClass("js_verification_code_update").removeClass("js_verify_code_update")), 3 == o.result && (t.html("Confirm Verfication Code"), $(".v_code_error").html("Incorrect verification code. Please use correct code sent to your email address").removeClass("d-none")), 2 == o.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal()));
      } });
  }function u() {
    $(".loader").remove();
  }function m(e) {
    html = "", $("#uiProfileLabel").html("Add Experience"), year = new Date().getFullYear(), option = "";for (var t = year; t >= 1950; t--) {
      option += '<option value="' + t + '">' + t + "</option>";
    }if (html += '<div class="form-group  title-select2  row">', html += '<label for="" class="col-12 col-form-label">Title *</label>', html += '<div class="col-12">', html += '<select id="j_title"><option value="">Select</option><option value="Other">Other</option>' + r + "</select>", html += '<input class="form-control d-none" id="j_other_title" name="j_other_title" placeholder="Other">', html += "</div>", html += "</div>", html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">School/Company</label>', html += '<div class="col-12">', html += '<input class="form-control" id="j_company" name="j_company" placeholder="">', html += "</div>", html += "</div>", html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">Location</label>', html += '<div class="col-12">', html += '<input class="form-control" id="j_location" name="j_location" placeholder="">', html += "</div>", html += "</div>", html += '<div class="form-group  row ">', html += '<label for="" class="col-12 col-form-label">From Year</label>', html += '<div class="col-12">', html += '<select class="form-control" id="js_pos_start_year" name="j_from_year">' + option + "</select>", html += "</div>", html += "</div>", html += '<div class="form-group  row ">', html += '<label for="" class="col-12 col-form-label">Month</label>', html += '<div class="col-12">', html += '<select class="form-control" id="js_pos_start_month" name="js_pos_start_month" ><option value="1">January</option><option value="2">February</option><option value="3">March</option><option value="4">April</option><option value="5">May</option><option value="6">June</option><option value="7">July</option><option value="8">August</option><option value="9">September</option><option value="10">October</option><option value="11">November</option><option value="12">December</option></select>', html += "</div>", html += "</div>", html += '<div class="form-group  row d-none position-to">', html += '<label for="" class="col-12 col-form-label">To Year</label>', html += '<div class="col-12">', html += '<select class="form-control" id="js_pos_end_year" name="js_pos_end_year">' + option + "</select>", html += "</div>", html += "</div>", html += '<div class="form-group  row  d-none position-to">', html += '<label for="" class="col-12 col-form-label">Month</label>', html += '<div class="col-12">', html += '<select class="form-control" id="js_pos_end_month" name="js_pos_end_month" ><option value="1">January</option><option value="2">February</option><option value="3">March</option><option value="4">April</option><option value="5">May</option><option value="6">June</option><option value="7">July</option><option value="8">August</option><option value="9">September</option><option value="10">October</option><option value="11">November</option><option value="12">December</option></select>', html += "</div>", html += "</div>", html += '<div class="form-group current-job filters row ">', html += '<label for="" class="col-12 col-form-label">Current Job</label>', html += '<div class="col-12">', html += '<a href="" class="new-checkbox js_current_job active"> <span><svg class="icon icon-square-o"><use xlink:href="' + asset("public/js/plugins/menu/symbol-defs.svg") + '#icon-square-o"></use></svg> <svg class="icon icon-check-square-o"><use xlink:href="' + asset("public/js/plugins/menu/symbol-defs.svg") + '#icon-check-square-o"></use></svg> </span> <em>Current Job (update current job on my profile)</em> </a>', html += "</div>", html += "</div>", html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">Description</label>', html += '<div class="col-12">', html += '<textarea class="form-control" style="height:100px; resize:none;"  id="j_description" name="j_description" placeholder=""></textarea>', html += "</div>", html += "</div>", $("#uiProfileDialog .modal-body").html(html), $("#uiProfileDialog").modal(), $("#uiProfileDialog .modal-footer").html('<button type="button" class="btn btn-primary modal-btn modal-btn-action js_save_experience  go full-padded-btn">Save Changes</button>'), $("#j_school").focus(), CKEDITOR.replace("j_description", { forcePasteAsPlainText: !0, removeButtons: "Underline,Strike,Subscript,SpellChecker,Superscript,Source,Maximise,Anchor,Styles,Specialchar,PasteText,PasteFromWord,Select,HiddenField,Radio,Checkbox,ImageButton,Anchor,BidiLtr,BidiRtl,Font,Format,Styles,Preview,Indent,Outdent", removePlugins: "blockquote,save,flash,iframe,pagebreak,templates,about,showblocks,newpage,language,print,div" }), void 0 !== e) for ($("#uiProfileLabel").html("Edit Experience"), $("#uiProfileDialog .modal-body").prepend('<div class="loader"> <div class="lds-ellipsis"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div></div>'), $("#uiProfileDialog .modal-body").prepend('<input type="hidden" id="update_exp_id" name="" value="' + e + '" >'), $("#uiProfileDialog .modal-footer").find(".js_save_experience").addClass("js_update_experience").removeClass("js_save_experience").show(), data = n, t = 0; t < data.length; t++) {
      item_id = data[t].id, item_id == e && (console.log(data[t]), title = data[t].title, company = data[t].company, locatio = data[t].location, from_month = data[t].from_month, from_year = data[t].from_year, to_month = data[t].to_month, to_year = data[t].to_year, description = data[t].description, current_job = data[t].current_job, $("#js_pos_start_month").val(from_month).trigger("change.select2"), $("#js_pos_start_year").val(from_year).change(), 1 == current_job ? $(".js_current_job").addClass("active") : ($(".js_current_job").removeClass("active"), $(".position-to").removeClass("d-none"), $("#js_pos_end_month").val(to_month).change(), $("#js_pos_end_year").val(to_year).change()), title_not_found = 1, $("#j_title option").each(function (e, t) {
        $(this).text() == title && (title_not_found = 0);
      }), 1 == title_not_found ? ($("#j_other_title").removeClass("d-none").val(title), $(".uiProfileDialog .modal-body .title-select2 .select2-container").addClass("mg-bottom-25")) : $(".uiProfileDialog .modal-body .title-select2 .select2-container").removeClass("mg-bottom-25"), setTimeout(function () {
        f(title_not_found, title);
      }, 500), console.log(from_month + " ==== " + from_year), $("#j_company").val(company), $("#j_location").val(locatio), CKEDITOR.instances.j_description.setData(description), $(".loader").remove());
    }$("select").select2();
  }function _(e) {
    html = "", $("#uiProfileLabel").html("Add Education"), year = new Date().getFullYear(), option = "", pp(year);for (var t = year; t >= 1950; t--) {
      option += '<option value="' + t + '">' + t + "</option>";
    }if (html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">School/College/University</label>', html += '<div class="col-12">', html += '<input class="form-control" id="j_school" name="j_school" placeholder="">', html += "</div>", html += "</div>", html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">Qualification</label>', html += '<div class="col-12">', html += '<select class="form-control j_degree" id="j_degree" name="j_degree">', html += '<option value="" selected="selected">Select</option>', html += '<option value="Skills for Life">Skills for Life</option>', html += '<option value="GCSE">GCSE</option>', html += '<option value="IGCSE">IGCSE</option>', html += '<option value="Level 2 Teaching Assistant">Level 2 Teaching Assistant</option>', html += '<option value="Level 3 Teaching Assistant">Level 3 Teaching Assistant</option>', html += '<option value="Level 2 Supporting Teaching and Learning in Schools">Level 2 Supporting Teaching and Learning in Schools</option>', html += '<option value="HLTA">HLTA</option>', html += '<option value="High School Graduate">High School Graduate</option>', html += '<option value="BTEC">BTEC</option>', html += '<option value="GNVQ">GNVQ</option>', html += '<option value="As Level">As Level</option>', html += '<option value="A-Level">A-Level</option>', html += '<option value="Higher National Certificate">Higher National Certificate</option>', html += '<option value="Higher National Diploma">Higher National Diploma</option>', html += '<option value="Bachelor or Arts (BA)">Bachelor or Arts (BA)</option>', html += '<option value="College Graduate">College Graduate</option>', html += '<option value="Associate Degree">Associate Degree</option>', html += '<option value="Bachelor of Education (BEd)">Bachelor of Education (BEd)</option>', html += '<option value="Bachelor of Science (BSc)">Bachelor of Science (BSc)</option>', html += '<option value="Post Graduate Certificate in Education (PGCE)">Post Graduate Certificate in Education (PGCE)</option>', html += '<option value="Professional Graduate Diploma in Education (PGDE)">Professional Graduate Diploma in Education (PGDE)</option>', html += '<option value="Masters of Science (MSc)">Masters of Science (MSc)</option>', html += '<option value="Masters of Arts (MA)">Masters of Arts (MA)</option>', html += '<option value="Masters of Business Administration  (MBA)">Masters of Business Administration  (MBA)</option>', html += '<option value="Masters of Education (MEd)">Masters of Education (MEd)</option>', html += '<option value="Doctor of Education (DEd)">Doctor of Education (DEd)</option>', html += '<option value="Doctor of Philosophy (PhD)">Doctor of Philosophy (PhD)</option>', html += '<option value="Leaving Certificate">Leaving Certificate</option>', html += '<option value="Junior Certificate">Junior Certificate</option>', html += '<option value="Other">Other</option>', html += "</select>", html += '<input class="form-control d-none" id="j_degree_other" name="j_degree_other" placeholder="Degree">', html += "</div>", html += "</div>", html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">Field of Study</label>', html += '<div class="col-12">', html += '<input class="form-control" id="j_fos" name="j_fos" placeholder="">', html += "</div>", html += "</div>", html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">Grade</label>', html += '<div class="col-12">', html += '<input class="form-control" id="j_grade" name="j_grade" placeholder="">', html += "</div>", html += "</div>", html += '<div class="form-group  row ">', html += '<label for="" class="col-12 col-form-label">From Year</label>', html += '<div class="col-12">', html += '<select class="form-control" id="j_from_year" name="j_from_year">' + option + "</select>", html += "</div>", html += "</div>", html += '<div class="form-group  row ">', html += '<label for="" class="col-12 col-form-label">To Year</label>', html += '<div class="col-12">', html += '<select class="form-control" id="j_to_year" name="j_to_year" >' + option + "</select>", html += "</div>", html += "</div>", html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">Description</label>', html += '<div class="col-12">', html += '<textarea class="form-control" style="height:100px; resize:none;"  id="j_edu_description" name="j_description" placeholder=""></textarea>', html += "</div>", html += "</div>", $("#uiProfileDialog .modal-body").html(html), $("#uiProfileDialog").modal(), $("#uiProfileDialog .modal-footer").html('<button type="button" class="btn btn-primary modal-btn modal-btn-action js_save_education go full-padded-btn">Save Changes</button>'), $("#j_school").focus(), void 0 !== e) for ($("#uiProfileLabel").html("Edit Education"), $("#uiProfileDialog .modal-footer").find(".js_save_education").addClass("js_update_education").removeClass("js_save_education").show(), $("#uiProfileDialog .modal-body").prepend('<div class="loader"> <div class="lds-ellipsis"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div></div>'), $("#uiProfileDialog .modal-body").prepend('<input type="hidden" id="update_education_id" name="" value="' + e + '" >'), data = s, pp(data), t = 0; t < data.length; t++) {
      item_id = data[t].id, item_id == e && (console.log(data[t].id), school = data[t].school, fos = data[t].field_of_study, degree = data[t].degree, grade = data[t].grade, from_year = data[t].from_year, to_month = "", to_year = data[t].to_year, description = data[t].description, e = data[t].id, current_job = data[t].current_job, 1 == current_job ? $(".js_current_job").addClass("active") : ($(".js_current_job").removeClass("active"), $("#js_pos_end_year").val(to_year).change(), $(".position-to").removeClass("d-none")), degree_not_found = 1, $("#j_degree option").each(function (e, t) {
        $(this).text() == degree && (degree_not_found = 0);
      }), 1 == degree_not_found ? ($("#j_degree_other").removeClass("d-none").val(degree), $(".uiProfileDialog .modal-body .title-select2 .select2-container").addClass("mg-bottom-25")) : $(".uiProfileDialog .modal-body .title-select2 .select2-container").removeClass("mg-bottom-25"), setTimeout(function () {
        g(degree_not_found, degree);
      }, 500), $("#j_school").val(school), $("#j_fos").val(fos), $("#j_grade").val(grade), $("#j_degree").val(degree), $("#j_from_year").val(from_year).change(), $("#j_to_year").val(to_year).change(), $("#j_edu_description").val(description), $(".loader").remove());
    }$("select").select2();
  }function f(e, t) {
    1 == e ? ($("#j_other_title").removeClass("d-none").val(t), $(".uiProfileDialog .modal-body .title-select2 .select2-container").addClass("mg-bottom-25"), $("#j_title").val("Other").trigger("change.select2")) : ($("#j_title").val(t).trigger("change.select2"), $(".uiProfileDialog .modal-body .title-select2 .select2-container").removeClass("mg-bottom-25"));
  }function g(e, t) {
    1 == e ? ($("#j_degree_other").removeClass("d-none").val(t), $("#j_degree").val("Other").trigger("change.select2"), $(".uiProfileDialog .modal-body .select2-container").addClass("mg-bottom-25")) : ($("#j_degree").val(t).trigger("change.select2"), $(".uiProfileDialog .modal-body  .select2-container").removeClass("mg-bottom-25"));
  }function v(e, t, o) {
    $.ajax({ type: "POST", url: path + "/update_profile", data: e, dataType: "json", success: function success(a) {
        "contact" == o && ($(".u-name h1").html(e.e_first_name + " " + e.e_last_name), $(".u-name h3").html(e.e_first_name + " " + e.e_last_name), $(".recent_job_em").html(e.current_emp_status)), "exp" == a.result && lscache.set("user", null), 1 == a.result && ("about" == o && ($("#intro p").html(a.about), $(".about-alert").remove(), 0 == $("#about-me-flag").val() && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 10, width += "%", $(".pro-widget .progress .progress-bar").css("width", width)), $("#about-me-flag").val("1"), add_success_msg("#about_you", ".col-12:eq(1)", "About is saved successfully"), t.html("Save Changes")), "contact" == o && (user = a.user, t.html("Save Changes"), $(".js_address").html(user.address).parents("li").removeClass("d-none"), $(".js_birthday").html(user.birthday).parents("li").removeClass("d-none"), $(".js_cn").html(user.contact_number).parents("li").removeClass("d-none"), $(".js_skype").html(user.skype).parents("li").removeClass("d-none"), 0 == $("#contact-me-flag").val() && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 10, width += "%", $(".pro-widget .progress .progress-bar").css("width", width)), $("#contact-me-flag").val("1"), add_success_msg("#birthday", ".col-12:eq(1)", "Contact information is saved successfully")), "edu" == o && (data = a.education, S(data), 0 == $("#education-flag").val() && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 15, width += "%", $(".pro-widget .progress .progress-bar").css("width", width)), $("#education-flag").val("1"), add_success_msg("#j_edu_description", ".col-12:eq(1)", "Education degree is saved successfully"), t.html("Save Changes")), "experience" == o && (data = a.experience, P(data), 1 == e.current_job && ($(".recent_job_em").html(e.title), $(".job-stats li:eq(0) p").html(e.company)), 0 == $("#experience-flag").val() && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 15, width += "%", $(".pro-widget .progress .progress-bar").css("width", width)), $("#experience-flag").val("1"), add_success_msg("#j_description", ".col-12:eq(1)", "Experience  is saved successfully"), t.html("Save Changes")), "skills" == o && (data = a.skills, function (e) {
          for ($(".js_update_skills").attr("data-value", e), skills_html = "", e = e.split(","), i = 0; i < e.length; i++) {
            skill = e[i], skills_html += '<li><p class="skills">' + skill + "</p></li>";
          }$(".spec-list").html(skills_html), 1 == $("#user_sess_request").val() && $(".btn-edit").removeClass("d-none");$("#uiProfileDialog .close").trigger("click");
        }(data), add_success_msg("#js_skills_tagsinput", ".col-12:eq(1)", "Specialization  is saved successfully"), t.html("Save Changes"))), $("#uiProfileDialog .close").trigger("click");
      } });
  }function b() {
    user_type = $("#user_type").val(), 1 == $("#user_sess_request").val() ? param = { _token: token, get_data: 1, user_type: user_type } : (uid = $("#uid").val(), param = { _token: token, get_data: 1, uid: uid, user_type: user_type }), "" != $("#sid_1").val() && (param.sid_1 = $("#sid_1").val()), "" != $("#sid_2").val() && (param.sid_2 = $("#sid_2").val()), "" != $("#sid_3").val() && (param.sid_3 = $("#sid_3").val()), $.ajax({ type: "POST", url: path + "/update_profile", data: param, dataType: "json", success: function success(e) {
        education = e.education, S(education), job_title_collection_arr = e.job_title_collection;for (var t = 0; t < job_title_collection_arr.length; t++) {
          r += '<option value="' + job_title_collection_arr[t].title + '">' + job_title_collection_arr[t].title + "</option>";
        }education.length > 0 && ($("#education-flag").val(1), $(".pro-widget .progress .progress-bar").length > 0 && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 15, width += "%", $(".pro-widget .progress .progress-bar").css("width", width))), experience = e.experience, experience.length > 0 && ($("#experience-flag").val(1), $(".pro-widget .progress .progress-bar").length > 0 && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 15, width += "%", $(".pro-widget .progress .progress-bar").css("width", width))), user_following = e.user_following, invitation_send = e.invitation_send, $(".accepted_text").html(invitation_send), P(experience), D(e.albums), function (e) {
          for (html = "", user_follower = lscache.get("user_follower"), user_followed = user_follow_only(user_follower), i = 0; i < e.length; i++) {
            records = e[i], svg_path = path + "/public/js/plugins/menu/symbol-defs.svg", svg_path2 = path + "/public/css/ico/symbol-defs.svg", "" != records.profile_photo ? 1 == records.profile_photo_custom ? user_profile_pic = path + "/public/user_profiles/" + records.profile_photo : user_profile_pic = records.profile_photo : user_profile_pic = path + "/public/css/img/user-img.png", profile_url = path + "/profile/" + records.username, name = records.first_name + " " + records.last_name, recent_job = records.recent_job, null == recent_job && (recent_job = ""), id = records.id, followers = 1, about = records.about, null != about ? about.length > 50 && (about = about.substr(0, 50) + "...") : about = "", 0 != user_followed && (found_user = filterValue(user_followed, "object_id", id)), active_class = "active", "undefined" == typeof found_user && (active_class = ""), hide_more = "", i > 1 && (hide_more = "d-none"), 2 == i && (html += '<div class="view-a-c"></div><button class="btn btn-outline-secondary js_view_all_f btn-view-all">View all followers</button>'), html += "", html += '<div class="feed follower ' + hide_more + '">', html += '<a href="' + profile_url + '" class="teachers-card">', html += '<img src="' + user_profile_pic + '" alt="Profile">', html += "<span>", html += "<strong>" + name + "</strong>", html += "<small>" + recent_job + "</small>", html += '<span class="people"><svg class="icon icon-people"><use xlink:href="' + svg_path2 + '#icon-people"></use></svg> ' + followers + "followers</span>", html += "</span>", html += "</a>", html += "<p>" + about, html += "</p>", html += '<ul class="fav-actions">', "" == active_class ? html += '<li><a href="" data-opt="Follow" data-id="' + id + '" class="js_follow_users  ' + active_class + '"><svg class="icon icon-check"><use xlink:href="' + svg_path2 + '#icon-check"></use></svg> Follow</a></li>' : html += '<li><a href="" data-opt="Followed" data-id="' + id + '" class="js_follow_users  ' + active_class + '"><svg class="icon icon-check"><use xlink:href="' + svg_path2 + '#icon-check"></use></svg> Following</a></li>', html += '<li><a target="_blank" href="' + profile_url + '"><svg class="icon icon-open_in_new"><use xlink:href="' + svg_path2 + '#icon-open_in_new"></use></svg> View Profile</a></li>', html += "</ul>", html += "</div>";
          }$(".js_follower_list").html(html), 1 == $("#user_sess_request").val() && $(".btn-edit").removeClass("d-none");
        }(e.user_following), function (e) {
          for (html = '<div class="owl-carousel owl-theme owl-recommend">', i = 0; i < e.length; i++) {
            records = e[i], svg_path = path + "/public/js/plugins/menu/symbol-defs.svg", svg_path2 = path + "/public/css/ico/symbol-defs.svg", "" != records.profile_photo ? 1 == records.profile_photo_custom ? user_profile_pic = path + "/public/user_profiles/" + records.profile_photo : user_profile_pic = records.profile_photo : user_profile_pic = path + "/public/css/img/user-img.png", profile_url = path + "/profile/" + records.username, name = records.first_name + " " + records.last_name, recent_job = records.recent_job, id = records.rid, followers = records.followers, about = records.text, dated = records.dated, html += '<div class="item">', html += '<div class="recommend"> <img src="' + user_profile_pic + '" alt="' + name + '"> <strong>' + name + "</strong> <small>" + dated + "</small>", html += "<p>" + about + "</p>", html += "</div>", html += "</div>";
          }html += "</div>", $("#recommend").html("<h2>Recommendations</h2>" + html), $(".owl-recommend").owlCarousel({ loop: !1, rewind: !0, nav: !1, autoplay: !0, autoplayTimeout: 5e3, autoplayHoverPause: !0, responsive: { 0: { items: 1 }, 768: { items: 1 }, 992: { items: 1 } } });
        }(e.user_recommendation), function (e) {
          for (html = "", pp(e), i = 0; i < e.length; i++) {
            posted_date = e[i].dated, url = path + "/forum/" + e[i].id + "/" + e[i].url, description = e[i].description, title = e[i].title, posted_date = e[i].dated, description = stripHtml(description), description.length > 200 && (description = description.substr(0, 200) + '...<a  href="' + url + '"   class="">view more</a>'), html += '<div class="feed"><div style="width: 100%;padding: 0;">', html += '<h2><a href="' + url + '">' + title + "</a></h2>", html += '<small class="text-muted">' + posted_date + "</small>", html += "</div>", html += "<p>" + description, html += "</p>", html += "</div>";
          }$("#publication").html("<h2>Publications</h2>" + html);
        }(e.faqs), function (e) {
          for (html = "", i = 0; i < e.length; i++) {
            records = e[i], "" == records.logo || null == records.logo ? logo = path + "/public/css/img/nologo.png" : logo = "https://www.expatsschools.com/secure_admin/media/images/logos/" + records.logo, name = records.name, id = records.id, url = path + "/school/" + records.url, html += '<a href="' + url + '" class="logo logo2"><img src="' + logo + '" alt="' + name + '"></a>';
          }html += "</div>", $(".js_parent-school-badges").append(html);
        }(e.school_badges), setTimeout(j, 400);
      } });
  }function j() {
    1 == $("#user_sess_request").val() ? $(".remove-album,.edit-album").remove() : (uid = $("#uid").val(), param = { _token: token, get_data: 1, uid: uid });
  }$(document).ready(function () {}), $(document).on("click", ".js_status_selection", function () {
    $(this).is(":checked") ? flag = !0 : flag = !1, $(".js_status_selection").prop("checked", !1), 1 == flag ? $(".upload_cv_cover").show() : $(".upload_cv_cover").hide(), $(this).prop("checked", flag);
  }), $(document).on("click", ".sh-twt", function () {
    $("#uiTwitterDialog").modal();
  }), $(document).ready(function (e) {
    $.ajax({ type: "POST", url: path + "/ajax/get_prof_collection", data: "_token=" + token, dataType: "json", success: function success(e) {
        if (1 == e.result) {
          for (e = e.data, h = '<option value="">Select</option>', i = 0; i < e.length; i++) {
            title = e[i].title, current_emp_status_hidden = $("#current_emp_status_hidden").val(), title == current_emp_status_hidden ? h += '<option selected="selected" value="' + title + '">' + title + "</option>" : h += '<option  value="' + title + '">' + title + "</option>";
          }$("#js_e_recent_job").html(h), $("#js_e_recent_job").select2({ dropdownParent: $("#uiContactDailog") });
        }
      } }), hide_become_m = lscache.get("hide_become_m"), 1 != hide_become_m && 0 == $("#membership_status").val() && "teacher" == $("#user_type").val() && 1 == $("#user_sess_request").val() && $("#uiBecomeETCmemberDailog").modal();
  }), $(document).on("click", ".js_update_contact", function (e) {
    e.preventDefault(), $("#uiContactDailog").modal();
  }), $(document).on("click", ".js_hide_become_m", function (e) {
    e.preventDefault(), $(this).hasClass("active") ? ($(this).removeClass("active"), lscache.set("hide_become_m", 0)) : ($(this).addClass("active"), lscache.set("hide_become_m", 1));
  }), $(document).on("click", ".js_recommend", function (e) {
    e.preventDefault(), $("#uiRecommendDailog").modal(), $(".js_response_to_r").addClass("d-none");
  }), $(document).on("click", ".js_send_recommendation", function (e) {
    if (recomm = $("#r_messsage").val(), "" == recomm) return $("#r_messsage").parents(".form-group").addClass("has-danger").find(".col-12:eq(1)").append('<small class="form-control-feedback e-feedback">Sorry, Recommendation Text can not be empty.</small>'), void $("#r_messsage").addClass("is-invalid");friend_id = $("#uid").val(), param = { _token: token, friend_id: friend_id, recomm: recomm, send_r: 1 }, btn = $(this), btn.html('Sending <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), function (e, t) {
      $.ajax({ type: "POST", url: path + "/send/recommendation", data: e, dataType: "json", success: function success(e) {
          $("#r_messsage").val(""), 1 == e.result && (t.html("Send"), $(".js_response_to_r").removeClass("d-none").html("Your recommendation is sent for approval</p>")), 2 == e.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal());
        } });
    }(param, btn);
  }), $(document).on("click", ".remove_document", function (e) {
    e.preventDefault(), obj = $(this), param = { _token: token, att: $(this).attr("data-att"), doc: $(this).attr("data-doc") }, btn = $(this), btn.html('Removing <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), $.ajax({ type: "POST", url: path + "/remove/doc", data: param, dataType: "json", success: function success(e) {
        1 == e.result && obj.parents(".col-6").remove(), 2 == e.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal());
      } });
  }), $(document).on("click", ".remove_twitter", function (e) {
    e.preventDefault(), update_modal("Twitter account", "Please wait while we remove your account. Don't close your browser", "hide"), $("#uiNoticeDailog").modal(), $("#uiNoticeDailog .close").remove(), $.ajax({ type: "POST", url: path + "/user/remove_twitter", data: param, dataType: "json", success: function success(e) {
        1 == e.result && (update_modal("Twitter account", "Your twitter account is removed successfully. Please wait while your page is refreshing", "hide"), $("#uiNoticeDailog").modal(), document.location.reload()), 2 == e.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal());
      } });
  }), $(document).on("click", ".js_invite", function (e) {
    var t = /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/;if (email = $("#invite_email_address").val(), "" == email) return $("#invite_email_address").parents(".form-group").addClass("has-danger").find(".col-12:eq(1)").append('<small class="form-control-feedback e-feedback">Sorry, email address can not be empty.</small>'), void $("#invite_email_address").addClass("is-invalid");email_arr = email.split(",");for (var o = 0; o < email_arr.length; o++) {
      if (!t.test(email_arr[o])) return $("#invite_email_address").parents(".form-group").addClass("has-danger").find(".col-12:eq(1)").append('<small class="form-control-feedback e-feedback">Sorry, invalid email address</small>'), $("#invite_email_address").addClass("is-invalid"), !1;
    }param = { _token: token, email: email, invite_friend: 1 }, btn = $(this), btn.html('Sending <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), function (e, t) {
      $.ajax({ type: "POST", url: path + "/send/invitation", data: e, dataType: "json", success: function success(e) {
          $("#invite_email_address").val(""), $(".invite_msg").remove(), 3 == e.result && (t.html("Send"), $("#invite_email_address").parents(".form-group").find(".col-12:eq(1)").append('<p class="alert invite_msg alert-danger mgtop10">You can not invite yourself.</p>')), 1 == e.result && (t.html("Send"), $("#invite_email_address").parents(".form-group").find(".col-12:eq(1)").append('<p class="alert invite_msg alert-success mgtop10">Invitation is sent successfully</p>')), 2 == e.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal());
        } });
    }(param, btn);
  }), $(document).on("click", ".js_verification_code_update", function (e) {
    return name_part = $("#school_email_address_up").val(), domain = $(".js_school_domain2").val(), school_email = name_part + domain, "" == school_email ? ($("#school_email_address_up").parents(".form-group").addClass("has-danger").find(".col-sm-10").append('<small class="form-control-feedback e-feedback">Sorry, email address can not be empty.</small>'), void $("#school_email_address_up").addClass("is-invalid")) : /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(school_email) ? (param = { _token: token, school_email: school_email, verify_school: 1 }, btn = $(this), btn.html('Sending <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), void function (e, t) {
      $.ajax({ type: "POST", url: path + "/verify/membership_email", data: e, dataType: "json", success: function success(e) {
          1 == e.result && (t.html("Confirm Verfication Code"), t.addClass("js_verify_code_update").removeClass("js_verification_code_update"), $(".v-code-update-div").removeClass("d-none"), $(".v-code-email-div").addClass("d-none")), 2 == e.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal()), 3 == e.result && (update_modal("Invalid Email", "This email address is already used. Please use another email address", "hide"), $("#uiNoticeDailog").modal(), t.html("Send Verification Code"));
        } });
    }(param, btn)) : ($("#school_email_address_up").parents(".form-group").addClass("has-danger").find(".col-sm-10").append('<small class="form-control-feedback e-feedback">Sorry, invalid email address</small>'), $("#school_email_address_up").addClass("is-invalid"), !1);
  }), $(document).on("click", ".js_send_v_code", function (e) {
    return name_part = $(".js_school_email_aname").val(), domain = $(".js_school_domain").val(), school_email = name_part + domain, "" == school_email ? ($(".js_school_email_aname").parents(".form-group").addClass("has-danger").find(".col-sm-10").append('<small class="form-control-feedback e-feedback">Sorry, email address can not be empty.</small>'), void $(".js_school_email_aname").addClass("is-invalid")) : /^([\w-\.]+@([\w-]+\.)+[\w-]{2,4})?$/.test(school_email) ? (param = { _token: token, school_email: school_email, verify_school: 1 }, btn = $(this), btn.html('Sending <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), void function (e, t) {
      $.ajax({ type: "POST", url: path + "/verify/membership_email", data: e, dataType: "json", success: function success(e) {
          1 == e.result && (t.html("Confirm Verfication Code"), t.addClass("js_verify_code").removeClass("js_send_v_code"), $(".js_school_email").addClass("d-none"), $(".v-c-msg-sent, .v-c-s").removeClass("d-none")), 2 == e.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal()), 3 == e.result && (update_modal("Invalid Email", "This email address is already used. Please use another email address", "hide"), $("#uiNoticeDailog").modal(), t.html("Send Verification Code"));
        } });
    }(param, btn)) : ($(".js_school_email_aname").parents(".form-group").addClass("has-danger").find(".col-sm-10").append('<small class="form-control-feedback e-feedback">Sorry, invalid email address</small>'), $(".js_school_email_aname").addClass("is-invalid"), !1);
  }), $(document).on("click", ".js_confirm_v_code_photo", function (e) {
    if (v_code = $("#photo_code_verification").val(), "" == v_code) return $("#photo_code_verification").parents(".form-group").addClass("has-danger").find(".col-sm-10").append('<small class="form-control-feedback e-feedback">Sorry, verification code can not be empty.</small>'), void $("#photo_code_verification").addClass("is-invalid");param = { _token: token, step: 1, v_code: v_code, verify_code: 1 }, btn = $(this), btn.html('Verifying <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), function (e, t) {
      $.ajax({ type: "POST", url: path + "/verify/membership_code_photo", data: e, dataType: "json", success: function success(o) {
          "1" == e.step && (1 == o.result && (html = "", $("#uiVerifyphotoDailog .close").trigger("click"), $("#uiProfileLabel").html("Update your profile picture"), t.html("Submit Verification Code"), src = $(".logo img").attr("src"), html += '<p class="lead">Add Photo</p>', html += '<div class="bio">', html += '<div class="pro-img"><img id="drag-image2" src="' + src + '" alt="Profile Picture"></div>', html += "</div>", html += '<span class="btn btn-success fileinput-button"  >', html += '<i class="glyphicon glyphicon-plus"></i>', html += "<span>Select file</span>", html += '<input id="fileupload" type="file" onchange="readURL(this);" name="profile_image">', html += "</span>", html += "", html += "<br /><br />", html += '<div id="controls" class="text-center d-none">', html += '<button id="js_rotate_left"  type="button" title="Rotate left"> <i class="glyphicon glyphicon-repeat lft-icon"></i> </button>', html += '<button id="js_zoom_out"     type="button" title="Zoom out">  <i class="glyphicon glyphicon-zoom-out"></i> </button>', html += '<button id="js_fit"          type="button" title="Fit image"> <i class="glyphicon glyphicon-home"></i></button>', html += '<button id="js_zoom_in"     type="button" title="Zoom in"> <i class="glyphicon glyphicon-zoom-in"></i> </button>', html += '<button id="js_rotate_right" type="button" title="Rotate right">  <i class="glyphicon glyphicon-repeat"></i></button>', html += "</div>", html += '<button type="button"  data-id="pills-step-4-tab" id="add_photo"  class="btn d-none btn-primary">Add Photo</button>', $("#uiProfileDialog .modal-body").html(html), $("#uiProfileDialog").modal(), $("#uiProfileDialog .modal-footer").hide()), 3 == o.result && (t.html("Confirm Verfication Code"), $(".v_code_error").html("Incorrect verification code. Please use correct code sent to your email address").removeClass("d-none")), 2 == o.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal()));
        } });
    }(param, btn);
  }), $(document).on("click", ".js_verify_code", function (e) {
    if (v_code = $("#code_verification").val(), "" == v_code) return $("#code_verification").parents(".form-group").addClass("has-danger").find(".col-sm-10").append('<small class="form-control-feedback e-feedback">Sorry, verification code can not be empty.</small>'), void $("#code_verification").addClass("is-invalid");param = { _token: token, step: 1, v_code: v_code, verify_code: 1 }, btn = $(this), btn.html('Verifying <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), c(param, btn);
  }), $(document).on("click", ".js_verify_code_update", function (e) {
    if (v_code = $("#verfication_code_up").val(), "" == v_code) return $("#verfication_code_up").parents(".form-group").addClass("has-danger").find(".col-sm-10").append('<small class="form-control-feedback e-feedback">Sorry, verification code can not be empty.</small>'), void $("#verfication_code_up").addClass("is-invalid");param = { _token: token, step: 2, v_code: v_code, verify_code: 1 }, btn = $(this), btn.html('Verifying <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), c(param, btn);
  }), $(document).on("click", ".join-now-epc", function (e) {
    btn = $(".js_epc"), btn.html("Send Verification Code"), btn.addClass("js_send_v_code").removeClass("js_verify_code"), $(".js_school_email").removeClass("d-none"), $(".v-c-msg-sent, .v-c-s").addClass("d-none"), $(".v_code_error").html("").addClass("d-none"), $("#uiJoinClubDailog").modal(), $("#uiBecomeETCmemberDailog .close").trigger("click"), $(".js_school_domain").select2({ dropdownParent: $("#uiJoinClubDailog") });
  }), $(document).on("click", ".js_inbox", function (e) {
    e.preventDefault(), $(".js_response_to_msg").addClass("d-none"), $("#uiMsgDailog").modal();
  }), $(document).ready(function (e) {
    $("select.birthday").selectric({ maxHeight: 300 }), $.ajax({ type: "POST", url: path + "/select/school_domains", data: "_token=" + token, dataType: "json", success: function success(e) {
        for (domains = e.data, html = "", i = 0; i < domains.length; i++) {
          html += '<option value="' + domains[i].domain_email + '">' + domains[i].domain_email + " [" + domains[i].name + "]</option>";
        }$(".js_school_domain,.js_school_domain2").append(html), $(".js_school_domain2").select2();
      } }), 1 == $("#user_sess_request").val() ? ($(".btn-edit").removeClass("d-none"), 0 == $("#about-me-flag").val() && $(".pro-edit").prepend('<div class="alert alert-info about-alert text-center" style="">Add about me to increase profile completeness by 5%</div>')) : $(".btn-edit").addClass("d-none"), b(), setTimeout(u, 500), progress_width = $("#progress_width").val(), setTimeout(j, 400), $("#albums-flag").val() > 0 && (progress_width += 10), $(".pro-widget .progress .progress-bar").css("width", progress_width + "%");
  }), $(document).on("click", ".js_edit_intro", function (e) {
    html = "", e.preventDefault(), $("#uiProfileLabel").html("Edit About"), html += '<p class="lead">Please write about yourself.</p>', html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">About</label>', html += '<div class="col-12">', html += '<textarea class="form-control" id="about_you" name="about_you" placeholder=""></textarea>', html += "</div>", html += "</div>", $("#uiProfileDialog .modal-body").html(html), $("#uiProfileDialog").modal(), $("#uiProfileDialog .modal-footer").html('<button type="button" class="btn btn-primary modal-btn modal-btn-action js_update_about  go full-padded-btn">Save Changes</button>').show(), $("#about_you").val($("#intro p").html());
  }), $(document).on("click", ".js_edit_dp", function (e) {
    e.preventDefault(), 1 == $("#membership_status").val() ? ($("#uiVerifyphotoDailog").modal(), $("#uiVerifyphotoDailog .modal-body").prepend('<div class="loader"> <div class="lds-ellipsis"><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div><div><div></div></div></div></div>'), $("#photo_code_verification").val(""), param.code = 1, $.ajax({ type: "POST", url: path + "/send_verification_code_photo", data: param, dataType: "json", success: function success(e) {
        1 == e.result && $("#uiVerifyphotoDailog .loader").remove(), 2 == e.result && (update_modal("Session time out", "Your session is expired. Please login again and continue", "hide"), $("#uiNoticeDailog").modal()), 3 == e.result && (update_modal("Invalid Email", "This email address is already used. Please use another email address", "hide"), $("#uiNoticeDailog").modal());
      } })) : (html = "", $("#uiProfileLabel").html("Update your profile picture"), src = $(".logo img").attr("src"), html += '<p class="lead">Add Photo</p>', html += '<div class="bio">', html += '<div class="pro-img"><img id="drag-image2" src="' + src + '" alt="Profile Picture"></div>', html += "</div>", html += '<span class="btn btn-success fileinput-button"  >', html += '<i class="glyphicon glyphicon-plus"></i>', html += "<span>Select file</span>", html += '<input id="fileupload" type="file" onchange="readURL(this);" name="profile_image">', html += "</span>", html += "", html += "<br /><br />", html += '<div id="controls" class="text-center d-none">', html += '<button id="js_rotate_left"  type="button" title="Rotate left"> <i class="glyphicon glyphicon-repeat lft-icon"></i> </button>', html += '<button id="js_zoom_out"     type="button" title="Zoom out">  <i class="glyphicon glyphicon-zoom-out"></i> </button>', html += '<button id="js_fit"          type="button" title="Fit image"> <i class="glyphicon glyphicon-home"></i></button>', html += '<button id="js_zoom_in"     type="button" title="Zoom in"> <i class="glyphicon glyphicon-zoom-in"></i> </button>', html += '<button id="js_rotate_right" type="button" title="Rotate right">  <i class="glyphicon glyphicon-repeat"></i></button>', html += "</div>", html += '<button type="button"  data-id="pills-step-4-tab" id="add_photo"  class="btn btn-primary d-none">Add Photo</button>', $("#uiProfileDialog .modal-body").html(html), $("#uiProfileDialog").modal(), $("#uiProfileDialog .modal-footer").hide());
  }), $(document).on("click", "#documents_public", function () {
    $(this).is(":checked") ? documents_public = 1 : documents_public = 0, param = { documents_public: documents_public, _token: token }, $.ajax({ type: "POST", url: path + "/user/upload_latest_cv", data: param, dataType: "json", success: function success(e) {} });
  }), $(document).on("change", "#latest_cover", function () {
    $(".upload_cv_cover").append('<p class="rotate_uploader_cover">Uploading <img src="https://www.godesto.com/skin/f/theme/images/ajax-loader.gif" /></p>');var e = path + "/user/upload_latest_cv",
        t = new FormData();t.append("file", $("#latest_cover")[0].files[0]), t.append("_token", token), t.append("cover", 1), $.ajax({ url: e, data: t, processData: !1, contentType: !1, type: "POST", dataType: "json", success: function success(e) {
        $(".rotate_uploader_cover").remove(), $(".upload_cv_cover").append('<p class="rotate_uploader_cover"></p>'), 1 == e.result ? ($("#hidden_latest_resume").val(e.resume), $(".rotate_uploader_cover").html("Document is uploaded successfully").addClass("alert-success")) : $(".rotate_uploader_cover").html("Invalid format selected. Please provide valid format").addClass("alert-warning");
      } });
  }), $(document).on("change", "#latest_resume", function () {
    $(".rotate_uploader").remove(), $(".upload_cv_cover").append('<p class="rotate_uploader">Uploading <img src="https://www.godesto.com/skin/f/theme/images/ajax-loader.gif" /></p>');var e = path + "/user/upload_latest_cv",
        t = new FormData();t.append("file", $("#latest_resume")[0].files[0]), t.append("_token", token), $.ajax({ url: e, data: t, processData: !1, contentType: !1, type: "POST", dataType: "json", success: function success(e) {
        $(".rotate_uploader").remove(), $(".upload_cv_cover").append('<p class="rotate_uploader"></p>'), 1 == e.result ? ($("#hidden_latest_resume").val(e.resume), $(".rotate_uploader").html("Document is uploaded successfully").addClass("alert-success")) : $(".rotate_uploader").html("Invalid format selected. Please provide valid format").addClass("alert-warning");
      } });
  }), $(document).on("click", "#add_photo", function () {
    $("#add_photo").html('Uploading <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>');var e = path + "/profile_image_upload",
        t = new FormData();t.append("file", $("#fileupload")[0].files[0]), t.append("_token", token), data = d.guillotine("getData"), scale = data.scale, h = data.h, w = data.w, x = data.x, y = data.y, angle = data.angle, t.append("scale", scale), t.append("h", h), t.append("w", w), t.append("y", y), t.append("x", x), t.append("angle", angle), $.ajax({ url: e, data: t, processData: !1, contentType: !1, type: "POST", success: function success(e) {
        1 == e.result && (src = path + "/public/user_profiles/" + e.img, $(".logo img, .user img").attr("src", src), $("#uiProfileDialog .close").trigger("click"), 0 == $("#dp-flag").val() && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 5, width += "%", $(".pro-widget .progress .progress-bar").css("width", width)), $("#dp-flag").val("1"));
      } });
  }), $(document).on("click", ".js_add_albums", function (e) {
    html = "", e.preventDefault(), $("#uiProfileLabel").html("Create Album"), html += '<p class="lead">Add Photos</p>', html += '<div class="bio">', html += '<div class="main_dropzone" ></div>', html += "</div>", html += '<div class="form-group  d-none row">', html += '<label for="" class="col-12 col-form-label">Album Name</label>', html += '<div class="col-12">', html += '<input type="text" value=""  class="form-control" id="album_name" name="album_name" placeholder="">', html += "</div>", html += "</div>", html += '<div class="form-group  d-none row">', html += '<label for="" class="col-12 col-form-label">Description</label>', html += '<div class="col-12">', html += '<textarea  class="form-control" id="album_description" name="album_description" ></textarea>', html += "</div>", html += "</div>", html += '<div class="form-group   d-none row">', html += '<label for="" class="col-12 col-form-label">Location</label>', html += '<div class="col-12">', html += '<input type="text" value=""  class="form-control" id="album_location" name="album_location" placeholder="">', html += "</div>", html += "</div>", html += '<div class="form-group   d-none row">', html += '<label for="" class="col-1 col-form-label">Public</label>', html += '<div class="col-11 position-relative" style="top:11px;">', html += '<input type="checkbox" value="1"  class="form-control" id="album_public" name="album_public" checked>', html += "</div>", html += "</div>", $("#uiProfileDialog .modal-body").html(html), $("#uiProfileDialog").modal(), $("#uiProfileDialog .modal-footer").html('<button type="button" class="btn btn-primary modal-btn modal-btn-action js_save_album  go full-padded-btn">Save Changes</button>');path;$(".main_dropzone").addClass("dropzone"), $(".main_dropzone").addClass("dropzone-previews"), param = { url: path + "/user/upload_album", previewsContainer: ".main_dropzone", uploadMultiple: !0, parallelUploads: 100, maxFiles: 100, success: function success(e, t) {
        $("#user_albums").val(t), $("#notification").modal(), $("#notification_message").html("Uploading is completed successfully");
      }, complete: function complete() {
        var e, t;$("#uiProfileDialog .modal-body").find(".d-none").removeClass("d-none"), e = document.getElementById("album_location"), t = new google.maps.places.Autocomplete(e), google.maps.event.addListener(t, "place_changed", function () {
          t.getPlace();
        });
      }, sending: function sending(e, t, o) {
        o.set("_token", token);
      } }, $(".main_dropzone").dropzone(param);
  }), $(document).on("click", ".js_edit_cover", function (e) {
    html = "", e.preventDefault(), $("#uiProfileLabel").html("Update your cover photo"), src = $(".logo img").attr("src"), html += '<p class="lead">Add Photo ( minimum width 1140px and height 100px )</p>', html += '<span class="btn btn-success fileinput-button"  >', html += '<i class="glyphicon glyphicon-plus"></i>', html += "<span>Select file</span>", html += '<input id="fileupload" type="file" name="cover_image">', html += "</span>", html += '<div id="progress" class="progress"><div class="progress-bar progress-bar-success"></div></div>', $("#uiProfileDialog .modal-body").html(html), $("#uiProfileDialog").modal(), $("#uiProfileDialog .modal-footer").hide();var t = path + "/cover_image_upload";$("#fileupload").fileupload({ formData: { _token: token }, url: t, dataType: "json", beforeSend: function beforeSend() {}, done: function done(e, t) {
        $(".cover").css("background", 'url("' + path + "/public/user_profiles/" + t.result.img + '")'), $("#uiProfileDialog .modal-body").html('<p class="lead">Cover image updated successfully</p>'), $("#uiProfileDialog .modal-footer").html('<button type="button"  class="btn btn-primary modal-btn modal-btn-action  close go full-padded-btn">Close</button>'), $("#uiProfileDialog").modal(), $(".close").trigger("click"), $(".cover").backgroundDraggable({ axis: "y" }), $(".cover").addClass("hand"), $(".fit-cover").css("z-index", "1001").show(), $(".cover").css("z-index", "1000"), $(".js_save_cover_design").show(), 0 == $("#cover-photo-flag").val() && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 5, width += "%", $(".pro-widget .progress .progress-bar").css("width", width)), $("#cover-photo-flag").val("1");
      }, start: function start() {}, progressall: function progressall(e, t) {
        var o = parseInt(t.loaded / t.total * 100, 10);$("#progress .progress-bar").css("width", o + "%");
      } }).prop("disabled", !$.support.fileInput).parent().addClass($.support.fileInput ? void 0 : "disabled");
  }), $(document).on("click", ".js_add_exp", function (e) {
    e.preventDefault(), m();
  }), $(document).on("click", ".js_add_edu", function (e) {
    e.preventDefault(), _();
  }), $(document).on("click", ".edit_education", function (e) {
    e.preventDefault(), id = $(this).attr("data-id"), _(id);
  }), $(document).on("click", ".edit_experience", function (e) {
    e.preventDefault(), id = $(this).attr("data-id"), m(id);
  }), $("#uiProfileDialog").on("hidden.bs.modal", function () {
    $("#uiProfileDialog .modal-footer").show();
  }), $(document).on("click", ".js_update_skills", function (e) {
    e.preventDefault(), html = "", skill_value = $(this).attr("data-value"), $("#uiProfileLabel").html("Edit Specialization"), html += '<div class="form-group  row">', html += '<label for="" class="col-12 col-form-label">Specialization</label>', html += '<div class="col-12">', html += '<input class="form-control js_skills" id="js_skills" value="' + skill_value + '" name="js_skills" placeholder="">', html += "</div>", html += "</div>", $("#uiProfileDialog .modal-body").html(html), $("#uiProfileDialog").modal(), $("#uiProfileDialog .modal-footer").html('<button type="button" class="btn btn-primary modal-btn modal-btn-action js_save_skills  go full-padded-btn">Save Changes</button>'), console.log(path + "/profile/skills");var t = new Bloodhound({ datumTokenizer: Bloodhound.tokenizers.obj.whitespace("text"), queryTokenizer: Bloodhound.tokenizers.whitespace, prefetch: path + "/profile/skills" });t.initialize();var o = $("#js_skills");o.tagsinput({ tagClass: function tagClass(e) {}, itemValue: "text", itemText: "text", typeaheadjs: { name: "skills_set", displayKey: "text", source: t.ttAdapter() } }), $(".spec-list .skills").each(function (e, t) {
      text = $(this).html(), o.tagsinput("add", { text: text });
    });
  }), $(document).on("select2:select", "#j_title", function (e) {
    var t = e.params.data;"" == t.id || "Other" == t.id ? ($("#j_other_title").removeClass("d-none"), $(".uiProfileDialog .modal-body .title-select2 .select2-container").addClass("mg-bottom-25")) : ($("#j_other_title").addClass("d-none"), $(".uiProfileDialog .modal-body .title-select2 .select2-container").removeClass("mg-bottom-25"));
  }), $(document).on("select2:select", "#j_degree", function (e) {
    var t = e.params.data;"" == t.id || "Other" == t.id ? ($("#j_degree_other").removeClass("d-none"), $(".uiProfileDialog .modal-body  .select2-container").addClass("mg-bottom-25")) : ($("#j_degree_other").addClass("d-none"), $(".uiProfileDialog .modal-body .select2-container").removeClass("mg-bottom-25"));
  }), $(document).on("click", ".js_update_about", function () {
    if ("" == $("#about_you").val()) return add_error_msg("#about_you", ".col-12:eq(1)", "About text"), !1;clear_error("#about_you", ".form-group"), btn = $(this), btn.html('<span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), about_you = $("#about_you").val(), p = { about_you: about_you, _token: token, about: 1 }, v(p, btn, "about");
  }), $(document).on("change", "#js_e_recent_job", function () {
    $(".js_status_selection").prop("checked", !1);
  }), $(document).on("click", ".js_save_c_i", function () {
    if ("" == $("#e_first_name").val()) return add_error_msg("#e_first_name", ".col-12:eq(1)", "Firt Name"), !1;if (clear_error("#e_first_name", ".form-group"), "" == $("#e_last_name").val()) return add_error_msg("#e_last_name", ".col-12:eq(1)", "Last Name"), !1;if (clear_error("#e_last_name", ".form-group"), "" == $("#contact_number").val()) return add_error_msg("#contact_number", ".col-12:eq(1)", "Contact Number"), !1;if (clear_error("#contact_number", ".form-group"), "" == $("#email_address").val()) return add_error_msg("#email_address", ".col-12:eq(1)", "Email Address"), !1;if (clear_error("#email_address", ".form-group"), birthday = $(".birth_year").val() + "-" + $(".birth_month").val() + "-" + $(".birth_day").val(), skype = $("#skype").val(), address = $("#address").val(), contact_number = $("#contact_number").val(), email_address = $("#email_address").val(), school_email_address = $("#school_email_address").val(), e_first_name = $("#e_first_name").val(), e_last_name = $("#e_last_name").val(), contact_public = 0, mobile_number_public = 0, $("#contact_public").is(":checked") && (contact_public = 1), $("#mobile_number_public").is(":checked") && (mobile_number_public = 1), current_emp_status = "", $(".js_status_selection").each(function (e, t) {
      $(this).is(":checked") && (current_emp_status = $(this).val());
    }), recent_job = "", "" == current_emp_status) {
      if ("" == $("#js_e_recent_job").val()) return add_error_msg("#js_e_recent_job", ".col-12:eq(1)", "Recent Job"), !1;clear_error("#js_e_recent_job", ".form-group"), recent_job = $("#js_e_recent_job").val();
    }btn = $(this), btn.html('Saving <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), p = { contact: 1, birthday: birthday, e_first_name: e_first_name, recent_job: recent_job, e_last_name: e_last_name, current_emp_status: current_emp_status, school_email_address: school_email_address, mobile_number_public: mobile_number_public, contact_public: contact_public, skype: skype, address: address, contact_number: contact_number, email_address: email_address, _token: token }, v(p, btn, "contact");
  }), $("#uiProfileLabel").on("hide.bs.modal", function (e) {
    return clear_success("#about_you", ".col-12:eq(1)"), !1;
  }), $(document).on("click", ".js_current_job", function (e) {
    e.preventDefault(), $(this).hasClass("active") ? ($(".position-to").removeClass("d-none"), $(this).removeClass("active")) : ($(".position-to").addClass("d-none"), $(this).addClass("active"));
  }), $(document).on("click", ".js_save_education", function (e) {
    var t;return school = $("#j_school").val(), degree = $("#j_degree").val(), fos = $("#j_fos").val(), grade = $("#j_grade").val(), from_year = $("#j_from_year").val(), to_year = $("#j_to_year").val(), description = $("#j_edu_description").val(), "" == $("#j_school").val() ? (add_error_msg("#j_school", ".col-12:eq(1)", "School Name"), !1) : (clear_error("#j_school", ".form-group"), "" == $("#j_degree").val() ? (add_error_msg("#j_degree", ".col-12:eq(1)", "Company/School"), !1) : (clear_error("#j_degree", ".form-group"), "" == $("#j_fos").val() ? (add_error_msg("#j_fos", ".col-12:eq(1)", "Field of study"), !1) : (clear_error("#j_fos", ".form-group"), "" == $("#j_grade").val() ? (add_error_msg("#j_grade", ".col-12:eq(1)", "Grade"), !1) : (clear_error("#j_grade", ".form-group"), "" == $("#j_edu_description").val() ? (add_error_msg("#j_edu_description", ".col-12:eq(1)", "Description"), !1) : (clear_error("#j_edu_description", ".form-group"), console.log(degree), "Other" == degree && (degree = $("#j_degree_other").val()), params = (a(t = { school: school, degree: degree, description: description, _token: token, fos: fos, grade: grade, from_year: from_year, to_year: to_year }, "from_year", from_year), a(t, "add_edu", 1), t), btn = $(this), btn.html('Saving <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), void v(params, btn, "edu"))))));
  }), $(document).on("click", ".js_update_education", function (e) {
    var t;return school = $("#j_school").val(), degree = $("#j_degree").val(), fos = $("#j_fos").val(), grade = $("#j_grade").val(), from_year = $("#j_from_year").val(), to_year = $("#j_to_year").val(), description = $("#j_edu_description").val(), "" == $("#j_school").val() ? (add_error_msg("#j_school", ".col-12:eq(1)", "School Name"), !1) : (clear_error("#j_school", ".form-group"), "" == $("#j_degree").val() ? (add_error_msg("#j_degree", ".col-12:eq(1)", "Company/School"), !1) : (clear_error("#j_degree", ".form-group"), "" == $("#j_fos").val() ? (add_error_msg("#j_fos", ".col-12:eq(1)", "Field of study"), !1) : (clear_error("#j_fos", ".form-group"), "" == $("#j_grade").val() ? (add_error_msg("#j_grade", ".col-12:eq(1)", "Grade"), !1) : (clear_error("#j_grade", ".form-group"), "" == $("#j_edu_description").val() ? (add_error_msg("#j_edu_description", ".col-12:eq(1)", "Description"), !1) : (clear_error("#j_edu_description", ".form-group"), id = $("#update_education_id").val(), console.log(degree), "Other" == degree && (degree = $("#js_degree_other").val()), params = (a(t = { school: school, degree: degree, id: id, description: description, _token: token, fos: fos, grade: grade, from_year: from_year, to_year: to_year }, "from_year", from_year), a(t, "add_edu", 1), t), btn = $(this), btn.html('Saving <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), void v(params, btn, "edu"))))));
  }), $(document).on("click", ".js_update_experience", function (e) {
    return title = $("#j_title").val(), company = $("#j_company").val(), locatio = $("#j_location").val(), from_year = $("#js_pos_start_year").val(), from_month = $("#js_pos_start_month").val(), to_year = $("#js_pos_end_year").val(), to_month = $("#js_pos_end_month").val(), description = $("#j_description").val(), description = CKEDITOR.instances.j_description.getData(), current_job = 0, $(".js_current_job").hasClass("active") && (current_job = 1), "" == $("#j_title").val() ? (add_error_msg("#j_title", ".col-12:eq(1)", "School Name"), !1) : (clear_error("#j_title", ".form-group"), "" == $("#j_company").val() ? (add_error_msg("#j_company", ".col-12:eq(1)", "Company/School"), !1) : (clear_error("#j_company", ".form-group"), "" == $("#j_location").val() ? (add_error_msg("#j_location", ".col-12:eq(1)", "Field of study"), !1) : (clear_error("#j_location", ".form-group"), "" == $("#js_pos_start_year").val() ? (add_error_msg("#js_pos_start_year", ".col-12:eq(1)", "Grade"), !1) : (clear_error("#js_pos_start_year", ".form-group"), "" == $("#j_edu_description").val() ? (add_error_msg("#j_edu_description", ".col-12:eq(1)", "Description"), !1) : (clear_error("#j_edu_description", ".form-group"), id = $("#update_exp_id").val(), params = { title: title, company: company, id: id, current_job: current_job, description: description, _token: token, jlocation: locatio, from_year: from_year, from_month: from_month, to_month: to_month, to_year: to_year, add_exp: 1 }, btn = $(this), btn.html('Saving <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), void v(params, btn, "experience"))))));
  }), $(document).on("click", ".js_save_experience", function (e) {
    return title = $("#j_title").val(), company = $("#j_company").val(), locatio = $("#j_location").val(), from_year = $("#js_pos_start_year").val(), from_month = $("#js_pos_start_month").val(), to_year = $("#js_pos_end_year").val(), to_month = $("#js_pos_end_month").val(), description = $("#j_description").val(), current_job = 0, $(".js_current_job").hasClass("active") && (current_job = 1), "" == $("#j_title").val() && "" == $("#j_other_title").val() ? (add_error_msg("#j_title", ".col-12:eq(1)", "Job Title"), !1) : (clear_error("#j_title", ".form-group"), "" != $("#j_other_title").val() && (title = $("#j_other_title").val()), "" == $("#j_company").val() ? (add_error_msg("#j_company", ".col-12:eq(1)", "Company/School"), !1) : (clear_error("#j_company", ".form-group"), "" == $("#j_location").val() ? (add_error_msg("#j_location", ".col-12:eq(1)", "Field of study"), !1) : (clear_error("#j_location", ".form-group"), "" == $("#js_pos_start_year").val() ? (add_error_msg("#js_pos_start_year", ".col-12:eq(1)", "Grade"), !1) : (clear_error("#js_pos_start_year", ".form-group"), "" == $("#j_edu_description").val() ? (add_error_msg("#j_edu_description", ".col-12:eq(1)", "Description"), !1) : (clear_error("#j_edu_description", ".form-group"), description = CKEDITOR.instances.j_description.getData(), params = { title: title, company: company, current_job: current_job, description: description, _token: token, jlocation: locatio, from_year: from_year, from_month: from_month, to_month: to_month, to_year: to_year, add_exp: 1 }, btn = $(this), btn.html('Saving <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), void v(params, btn, "experience"))))));
  }), $(document).on("click", ".js_rm_albums", function (e) {
    e.preventDefault(), id = $(this).attr("data-id"), $("#uiProfileLabel").html("Delete"), $("#uiProfileDialog .modal-body").html('<p class="lead">Deleting your album...</p>'), $("#uiProfileDialog .modal-footer").html(""), $("#uiProfileDialog").modal(), param = { delete_album: 1, id: id, _token: token }, $.ajax({ type: "POST", url: path + "/update_profile", data: param, dataType: "json", success: function success(e) {
        $("#uiProfileDialog .modal-body").html('<p class="lead">Your album is deleted successfully.</p>'), 1 == e.result && D(e.albums);
      } });
  }), $(document).on("click", ".js_save_album", function (e) {
    return album_description = $("#album_description").val(), album_location = $("#album_location").val(), album_name = $("#album_name").val(), "" == $("#album_name").val() ? (add_error_msg("#album_name", ".col-12:eq(1)", "Album Name"), !1) : (clear_error("#album_name", ".form-group"), "" == $("#album_description").val() ? (add_error_msg("#album_description", ".col-12:eq(1)", "Album Description"), !1) : (clear_error("#album_description", ".form-group"), "" == $("#album_location").val() ? (add_error_msg("#album_location", ".col-12:eq(1)", "Field of study"), !1) : (clear_error("#album_location", ".form-group"), images = $("#user_albums").val(), publics = 0, $("#album_public").is(":checked") && (publics = 1), params = { album_location: album_location, public: publics, album_description: album_description, album_name: album_name, add_album: 1, images: images, _token: token }, btn = $(this), btn.html('Saving <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), t = params, btn, void $.ajax({ type: "POST", url: path + "/user/create_album", data: t, dataType: "json", success: function success(e) {
        $("#uiProfileDialog .close").trigger("click"), $("#user_albums").val(""), 0 == $("#albums-flag").val() && (width = $(".pro-widget .progress .progress-bar")[0].style.width, width = width.replace("%", ""), width = parseInt(width) + 10, width += "%", $(".pro-widget .progress .progress-bar").css("width", width)), $("#albums-flag").val("1"), b();
      } }))));var t;
  });var k,
      C = function C(e, t) {
    var o = "[^\\" + t + "]",
        a = e.search(o),
        i = e.length - e.split("").reverse().join("").search(o);return e.substring(a, i);
  };function D(e) {
    for (html = "", i = 0; i < e.length; i++) {
      if (album = e[i].album, user_albums_photos = e[i].user_albums_photos, cover_photo = "", 0 != user_albums_photos.length) {
        for (cover_photo = path + "/public/user_albums/" + user_albums_photos[0].image, name = album.name, id = album.id, js_album_locations = album.location, album_photos_str = "", photo_counter = 0; photo_counter < user_albums_photos.length; photo_counter++) {
          album_photos_str = album_photos_str + "##" + user_albums_photos[photo_counter].image;
        }album_photos_str = C(album_photos_str, "##"), html += '<div class="album" >', html += '<a href="" class="edit-album"><svg class="icon icon-mode_edit"><use xlink:href="' + asset("public/css/ico/symbol-defs.svg") + '#icon-mode_edit"></use></svg></a>', html += '<a href=""  data-id="' + id + '"  class="remove-album js_rm_albums "><svg class="icon icon-delete"><use xlink:href="' + asset("public/css/ico/symbol-defs.svg") + '#icon-delete"></use></svg></a>', html += '<a href="" class="js_album_view"   data-id="' + id + '">', html += '<div class="image-album" >', html += '<div class="uiScaledImageContainer" ><img class="scaledImageFitWidth img" src="' + cover_photo + '"  alt="' + name + '" ></div>', html += '<div class="album-gxb">', html += "<div>", html += '<div class="album-gxd pl-8"><span class="album-iem font-600">' + name + "</span></div>", html += '<div class="album-gxe pl-8"><span class="album-ieq font-600">' + user_albums_photos.length + " Items</span></div>", html += "</div>", html += "</div>", html += '<div class="_4f0s"><input class="js_album_locations" type="hidden" value="' + js_album_locations + '" /><input class="str_images" type="hidden" value="' + album_photos_str + '" /></div>', html += "</div>", html += "</a>", html += "</div>";
      }
    }$(".albums").html(html), 1 == $("#user_sess_request").val() && $(".btn-edit").removeClass("d-none");
  }function P(e) {
    for (n = e, experience_html = "", i = 0; i < e.length; i++) {
      title = e[i].title, company = e[i].company, locatio = e[i].location, from_month = e[i].from_month, from_year = e[i].from_year, to_month = e[i].to_month, to_year = e[i].to_year, description = e[i].description, id = e[i].id, void 0 === l[to_month] && (l[to_month] = ""), 1 == e[i].current_job ? to_string = "present" : to_string = l[to_month] + " " + to_year, to_month -= 1, from_month -= 1, console.log(from_month + "---" + l[from_month] + "---" + from_year), void 0 === l[from_month] && (l[from_month] = ""), experience_html += "<li>", experience_html += "<em> " + l[from_month] + " " + from_year + " –  " + to_string + "</em>", experience_html += "<p><strong>" + company + " <span>" + locatio + " - " + title + "</span></strong></p><div>" + description + "</div>", experience_html += '<p><a href="" data-id="' + id + '" class="btn-edit edit_experience d-none"><svg class="icon icon-mode_edit"><use xlink:href="' + asset("public/css/ico/symbol-defs.svg") + '#icon-mode_edit"></use></svg></a>', experience_html += '<a href="" data-id="' + id + '" class="btn-edit del_experience d-none"><svg class="icon icon-delete"><use xlink:href="' + asset("public/css/ico/symbol-defs.svg") + '#icon-delete"></use></svg></a></p>', experience_html += "</li>";
    }$("#experience .alist").html(experience_html), 1 == $("#user_sess_request").val() && $(".btn-edit").removeClass("d-none");
  }function S(e) {
    for (edu_html = "", s = e, i = 0; i < e.length; i++) {
      school = e[i].school, fos = e[i].field_of_study, degree = e[i].degree, grade = e[i].grade, from_year = e[i].from_year, to_year = e[i].to_year, description = e[i].description, id = e[i].id, edu_html += "<li>", edu_html += "<em> " + from_year + " –  " + to_year + "</em>", edu_html += "<p><strong>" + degree + " <span>" + fos + " at " + school + "</span></strong>" + description, edu_html += '<a href="" data-id="' + id + '" class="btn-edit edit_education d-none"><svg class="icon icon-mode_edit"><use xlink:href="' + asset("public/css/ico/symbol-defs.svg") + '#icon-mode_edit"></use></svg></a>', edu_html += '<a href="" data-id="' + id + '" class="btn-edit del_education d-none"><svg class="icon icon-delete"><use xlink:href="' + asset("public/css/ico/symbol-defs.svg") + '#icon-delete"></use></svg></a></p>', edu_html += "</li>";
    }$("#education .alist").html(edu_html), 1 == $("#user_sess_request").val() && $(".btn-edit").removeClass("d-none"), $("#uiProfileDialog .close").trigger("click");
  }function T(e, t, o) {
    $.ajax({ type: "POST", url: path + "/delete_profile", data: e, dataType: "json", success: function success(e) {
        "exp" == e.result && lscache.set("user", null), k.parents("li").remove(), $("#uiProfileDialog .close").trigger("click");
      } });
  }function A() {
    for (user_follower = lscache.get("user_follower"), user_followed = user_follow_only(user_follower), id = $("#uid").val(), found_school = filterValue(user_followed, "object_id", id), follow_text = "Follow", follow_text_opt = "Follow", i = 0; i < user_followed.length; i++) {
      user_followed[i].object_id == id && (svg_path2 = path + "/public/css/ico/symbol-defs.svg", follow_text = '<svg class="icon icon-check"><use xlink:href="' + svg_path2 + '#icon-check"></use></svg> Followed', follow_text_opt = "Followed");
    }$(".js_follow_user").attr("data-opt", follow_text_opt), $(".js_follow_user").html(follow_text);
  }function I() {
    $(".owl-recommend2").owlCarousel("destroy"), $(".owl-recommend2").owlCarousel({ loop: !0, nav: !1, autoplay: !0, autoplayTimeout: 5e3, autoplayHoverPause: !0, responsive: { 0: { items: 1 }, 768: { items: 1 }, 992: { items: 1 } } });
  }function q() {
    $("#uiMsgDailog .close").trigger("click"), update_modal("Message", "Your message is sent successfully.", "hide"), $("#uiNoticeDailog").modal();
  }$(document).on("click", ".js_view_all_f", function (e) {
    $(".js_follower_list .feed").removeClass("d-none"), $(this).remove(), $(".js_follower_list").append('<button class="btn btn-outline-secondary js_view_all_less btn-view-all">View less followers</button>');
  }), $(document).on("click", ".js_view_all_less", function (e) {
    $(".js_follower_list .feed:gt(1)").addClass("d-none"), $(this).remove(), $(".js_follower_list .view-a-c").html('<button class="btn btn-outline-secondary js_view_all_f btn-view-all">View all followers</button>');
  }), $(document).on("click", ".del_education", function (e) {
    e.preventDefault(), id = $(this).attr("data-id"), k = $(this), $("#uiProfileLabel").html("Delete"), $("#uiProfileDialog .modal-body").html('<p class="lead">Are you sure to delete?</p>'), $("#uiProfileDialog .modal-footer").html('<button type="button" data-id="' + id + '"  class="btn btn-primary modal-btn modal-btn-action js_del_edu_action go full-padded-btn">Delete</button>').show(), $("#uiProfileDialog").modal();
  }), $(document).on("click", ".del_experience", function (e) {
    e.preventDefault(), id = $(this).attr("data-id"), k = $(this), $("#uiProfileLabel").html("Delete"), $("#uiProfileDialog .modal-body").html('<p class="lead">Are you sure to delete?</p>'), $("#uiProfileDialog .modal-footer").html('<button type="button" data-id="' + id + '"  class="btn btn-primary modal-btn modal-btn-action js_del_exp_action go full-padded-btn">Delete</button>').show(), $("#uiProfileDialog").modal();
  }), $(document).on("click", ".js_del_edu_action", function (e) {
    btn = $(this), id = $(this).attr("data-id"), btn.html('Deleting <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), params = { id: id, del_education: 1, _token: token }, T(params, btn, "edu");
  }), $(document).on("click", ".js_del_exp_action", function (e) {
    btn = $(this), id = $(this).attr("data-id"), btn.html('Deleting <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), params = { id: id, del_experience: 1, _token: token }, T(params, btn, "edu");
  }), $(document).on("click", ".js_save_skills", function (e) {
    btn = $(this), tags = $(".js_skills").val(), btn.html('Saving <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), params = { tags: tags, add_skills: 1, _token: token }, v(params, btn, "skills");
  }), $(document).on("click", ".js_save_cover_design", function (e) {
    $(".cover").backgroundDraggable("disable"), cover = $(".cover").attr("style"), btn = $(this), btn.html('Saving <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), position = $(".cover").css("background-position-y"), $(".fit-cover").hide(), $.ajax({ type: "POST", url: path + "/cover_image_upload", data: "reset_picture=1&cover=" + position + "&_token=" + token, dataType: "json", success: function success(e) {
        $(".cover").removeClass("hand"), $(".cover").css("z-index", "1"), $(".fit-cover").css("z-index", "0"), $(".js_save_cover_design").hide(), $(".cover").backgroundDraggable("disable"), btn.html("Save");
      } });
  }), $(document).on("click", ".js_tutor", function (e) {
    e.preventDefault(), $(this).hasClass("active") ? (tutor = 0, $(this).removeClass("active"), $(".itutormsg").remove()) : (tutor = 1, $(this).addClass("active"), $(".t-avail").append('<p class="itutormsg"><i>I confirm I have the necessary permissions to undertake tutoring</i></p>')), $("#uiProfileLabel").html("Update Profile"), $("#uiProfileDialog .modal-body").html('<p class="lead">Your Available for tutoring status is updating...</p>'), $("#uiProfileDialog .modal-footer").html(""), $("#uiProfileDialog").modal(), $.ajax({ type: "POST", url: path + "/save_profile", data: "profile=1&tutor=" + tutor + "&_token=" + token, dataType: "json", success: function success(e) {
        $("#uiProfileLabel").html("Update Profile"), $("#uiProfileDialog .modal-body").html('<p class="lead">Your Available for tutoring status is updated.</p>'), $("#uiProfileDialog .modal-footer").html(""), $("#uiProfileDialog").modal();
      } });
  }), $(document).ready(function (e) {
    setTimeout(A, 500);
  }), $(document).on("click", ".js_album_view", function (e) {
    for (e.preventDefault(), $(".js_album_caro .owl-carousel").html(""), name = $(this).parents(".album").find("span.album-iem").html(), description = "", locations = $(this).parents(".album").find("input.js_album_locations").val(), str_images = $(this).parents(".album").find("input.str_images").val(), image_arr = str_images.split("##"), html = "", i = 0; i < image_arr.length; i++) {
      image = path + "/public/user_albums/" + image_arr[i], html += '<div class="item"><img src="' + image + '" alt="album photo\'s"><div class="location-album-gallery"><p>' + locations + "</p></div></div>";
    }$(".js_album_caro .owl-carousel").html(html), setTimeout(I, 300), $("#uiAlbumShowDialog .modal-title").html("Album : " + name), $("#uiAlbumShowDialog").modal();
  }), $(document).on("click", ".js_send_msg", function (e) {
    if ("" == $.trim($("#chat_messsage").val())) return add_error_msg("#chat_messsage", ".col-12:eq(1)", "Text message"), !1;clear_error("#chat_messsage", ".form-group"), message = $("#chat_messsage").val(), btn = $(this), rec_id = $("#uid").val(), params = {}, params = { _token: token, message: message, rec_id: rec_id }, btn.html('Sending <span class="glyphicon glyphicon-refresh glyphicon-refresh-animate"></span>'), function (e, t, o) {
      $.ajax({ type: "POST", url: path + "/user/send_message", data: e, dataType: "json", success: function success(e) {
          $("#chat_messsage").val(""), $(".js_response_to_msg").removeClass("d-none").html("Your message is sent successfully"), t.html(o), setTimeout(q, 1e3);
        } });
    }(params, btn, "Send Message");
  }), $(document).on("click", ".js_block_user", function (e) {
    e.preventDefault(), btn = $(this), uid2 = $("#uid").val(), uid1 = $("#guid").val(), status = $(this).attr("data-status"), params = { _token: token, uid2: uid2, uid1: uid1, status: status }, btn.html("Blocking..."), function (e, t, o) {
      $.ajax({ type: "POST", url: path + "/user/block", data: e, dataType: "json", success: function success(e) {
          lscache.set("user_block", e.user_block), lscache.set("user_follower", e.user_follower), t.html(o), t.attr("data-status", 0), document.location.reload();
        } });
    }(params, btn, "Block");
  }), $(document).on("click", ".profile-nav li a", function () {
    $(".closebtn").trigger("click");
  }), function (e) {
    var t = new Array(),
        o = new Array();e.fn.doAutosize = function (t) {
      var o = e(this).data("minwidth"),
          a = e(this).data("maxwidth"),
          i = "",
          l = e(this),
          s = e("#" + e(this).data("tester_id"));if (i !== (i = l.val())) {
        var n = i.replace(/&/g, "&amp;").replace(/\s/g, " ").replace(/</g, "&lt;").replace(/>/g, "&gt;");s.html(n);var r = s.width(),
            d = r + t.comfortZone >= o ? r + t.comfortZone : o;(l.width() > d && d >= o || d > o && a > d) && l.width(d);
      }
    }, e.fn.resetAutosize = function (t) {
      var o = e(this).data("minwidth") || t.minInputWidth || e(this).width(),
          a = e(this).data("maxwidth") || t.maxInputWidth || e(this).closest(".tagsinput").width() - t.inputPadding,
          i = e(this),
          l = e("<tester/>").css({ position: "absolute", top: -9999, left: -9999, width: "auto", fontSize: i.css("fontSize"), fontFamily: i.css("fontFamily"), fontWeight: i.css("fontWeight"), letterSpacing: i.css("letterSpacing"), whiteSpace: "nowrap" }),
          s = e(this).attr("id") + "_autosize_tester";!e("#" + s).length > 0 && (l.attr("id", s), l.appendTo("body")), i.data("minwidth", o), i.data("maxwidth", a), i.data("tester_id", s), i.css("width", o);
    }, e.fn.addTag = function (a, i) {
      return i = jQuery.extend({ focus: !1, callback: !0 }, i), this.each(function () {
        var l = e(this).attr("id"),
            s = e(this).val().split(t[l]);if ("" == s[0] && (s = new Array()), a = jQuery.trim(a), i.unique) 1 == (n = e(this).tagExist(a)) && e("#" + l + "_tag").addClass("not_valid");else var n = !1;if ("" != a && 1 != n) {
          if (e("<span>").addClass("tag").append(e("<span>").text(a).append("&nbsp;&nbsp;"), e("<a>", { href: "#", title: "Removing tag", text: "x" }).click(function () {
            return e("#" + l).removeTag(escape(a));
          })).insertBefore("#" + l + "_addTag"), s.push(a), e("#" + l + "_tag").val(""), i.focus ? e("#" + l + "_tag").focus() : e("#" + l + "_tag").blur(), e.fn.tagsInput.updateTagsField(this, s), i.callback && o[l] && o[l].onAddTag) o[l].onAddTag.call(this, a);if (o[l] && o[l].onChange) {
            var r = s.length;o[l].onChange.call(this, e(this), s[r - 1]);
          }
        }
      }), !1;
    }, e.fn.removeTag = function (a) {
      return a = unescape(a), this.each(function () {
        var l = e(this).attr("id"),
            s = e(this).val().split(t[l]);for (e("#" + l + "_tagsinput .tag").remove(), str = "", i = 0; i < s.length; i++) {
          s[i] != a && (str = str + t[l] + s[i]);
        }(e.fn.tagsInput.importTags(this, str), o[l] && o[l].onRemoveTag) && o[l].onRemoveTag.call(this, a);
      }), !1;
    }, e.fn.tagExist = function (o) {
      var a = e(this).attr("id"),
          i = e(this).val().split(t[a]);return jQuery.inArray(o, i) >= 0;
    }, e.fn.importTags = function (t) {
      var o = e(this).attr("id");e("#" + o + "_tagsinput .tag").remove(), e.fn.tagsInput.importTags(this, t);
    }, e.fn.tagsInput = function (i) {
      var l = jQuery.extend({ interactive: !0, defaultText: "add a specialization", minChars: 0, width: "300px", height: "100px", autocomplete: { selectFirst: !1 }, hide: !0, delimiter: ",", unique: !0, removeWithBackspace: !0, placeholderColor: "#666666", autosize: !0, comfortZone: 20, inputPadding: 12 }, i),
          s = 0;return this.each(function () {
        if (void 0 === e(this).attr("data-tagsinput-init")) {
          e(this).attr("data-tagsinput-init", !0), l.hide && e(this).hide();var i = e(this).attr("id");(!i || t[e(this).attr("id")]) && (i = e(this).attr("id", "tags" + new Date().getTime() + s++).attr("id"));var n = jQuery.extend({ pid: i, real_input: "#" + i, holder: "#" + i + "_tagsinput", input_wrapper: "#" + i + "_addTag", fake_input: "#" + i + "_tag" }, l);t[i] = n.delimiter, (l.onAddTag || l.onRemoveTag || l.onChange) && (o[i] = new Array(), o[i].onAddTag = l.onAddTag, o[i].onRemoveTag = l.onRemoveTag, o[i].onChange = l.onChange);var r = '<div id="' + i + '_tagsinput" class="tagsinput"><div id="' + i + '_addTag">';if (l.interactive && (r = r + '<input id="' + i + '_tag" value="" data-default="' + l.defaultText + '" />'), e(r += '</div><div class="tags_clear"></div></div>').insertAfter(this), e(n.holder).css("width", l.width), e(n.holder).css("min-height", l.height), e(n.holder).css("height", l.height), "" != e(n.real_input).val() && e.fn.tagsInput.importTags(e(n.real_input), e(n.real_input).val()), l.interactive) {
            if (e(n.fake_input).val(e(n.fake_input).attr("data-default")), e(n.fake_input).css("color", l.placeholderColor), e(n.fake_input).resetAutosize(l), e(n.holder).bind("click", n, function (t) {
              e(t.data.fake_input).focus();
            }), e(n.fake_input).bind("focus", n, function (t) {
              e(t.data.fake_input).val() == e(t.data.fake_input).attr("data-default") && e(t.data.fake_input).val(""), e(t.data.fake_input).css("color", "#000000");
            }), void 0 != l.autocomplete_url) {
              for (attrname in autocomplete_options = { source: l.autocomplete_url }, l.autocomplete) {
                autocomplete_options[attrname] = l.autocomplete[attrname];
              }void 0 !== jQuery.Autocompleter ? (e(n.fake_input).autocomplete(l.autocomplete_url, l.autocomplete), e(n.fake_input).bind("result", n, function (t, o, a) {
                o && e("#" + i).addTag(o[0] + "", { focus: !0, unique: l.unique });
              })) : void 0 !== jQuery.ui.autocomplete && (e(n.fake_input).autocomplete(autocomplete_options), e(n.fake_input).bind("autocompleteselect", n, function (t, o) {
                return e(t.data.real_input).addTag(o.item.value, { focus: !0, unique: l.unique }), !1;
              }));
            } else e(n.fake_input).bind("blur", n, function (t) {
              var o = e(this).attr("data-default");return "" != e(t.data.fake_input).val() && e(t.data.fake_input).val() != o ? t.data.minChars <= e(t.data.fake_input).val().length && (!t.data.maxChars || t.data.maxChars >= e(t.data.fake_input).val().length) && e(t.data.real_input).addTag(e(t.data.fake_input).val(), { focus: !0, unique: l.unique }) : (e(t.data.fake_input).val(e(t.data.fake_input).attr("data-default")), e(t.data.fake_input).css("color", l.placeholderColor)), !1;
            });e(n.fake_input).bind("keypress", n, function (t) {
              return a(t) ? (t.preventDefault(), t.data.minChars <= e(t.data.fake_input).val().length && (!t.data.maxChars || t.data.maxChars >= e(t.data.fake_input).val().length) && e(t.data.real_input).addTag(e(t.data.fake_input).val(), { focus: !0, unique: l.unique }), e(t.data.fake_input).resetAutosize(l), !1) : void (t.data.autosize && e(t.data.fake_input).doAutosize(l));
            }), n.removeWithBackspace && e(n.fake_input).bind("keydown", function (t) {
              if (8 == t.keyCode && "" == e(this).val()) {
                t.preventDefault();var o = e(this).closest(".tagsinput").find(".tag:last").text(),
                    a = e(this).attr("id").replace(/_tag$/, "");o = o.replace(/[\s]+x$/, ""), e("#" + a).removeTag(escape(o)), e(this).trigger("focus");
              }
            }), e(n.fake_input).blur(), n.unique && e(n.fake_input).keydown(function (t) {
              (8 == t.keyCode || String.fromCharCode(t.which).match(/\w+|[áéíóúÁÉÍÓÚñÑ,/]+/)) && e(this).removeClass("not_valid");
            });
          }
        }
      }), this;
    }, e.fn.tagsInput.updateTagsField = function (o, a) {
      var i = e(o).attr("id");e(o).val(a.join(t[i]));
    }, e.fn.tagsInput.importTags = function (a, l) {
      e(a).val("");var s = e(a).attr("id"),
          n = l.split(t[s]);for (i = 0; i < n.length; i++) {
        e(a).addTag(n[i], { focus: !1, callback: !1 });
      }o[s] && o[s].onChange && o[s].onChange.call(a, a, n[i]);
    };var a = function a(t) {
      var o = !1;return 13 == t.which || ("string" == typeof t.data.delimiter ? t.which == t.data.delimiter.charCodeAt(0) && (o = !0) : e.each(t.data.delimiter, function (e, a) {
        t.which == a.charCodeAt(0) && (o = !0);
      }), o);
    };
  }(jQuery), function (e) {
    var t = e(window),
        a = function a(e, t, o, _a) {
      if (3 === arguments.length || _a) {
        if (o < e) return e;if (o > t) return t;
      }return o;
    },
        i = function i(e) {
      e.clientX = e.originalEvent.touches[0].clientX, e.clientY = e.originalEvent.touches[0].clientY;
    };function l(e, t) {
      this.element = e, this.options = t, this.init();
    }l.prototype.init = function () {
      var o = e(this.element),
          l = (o.css("background-image").match(/^url\(['"]?(.*?)['"]?\)$/i) || [])[1],
          s = this.options;if (l) {
        var n = { width: 0, height: 0 };s.bound && (n = function (e) {
          var t = (e.css("background-image").match(/^url\(['"]?(.*?)['"]?\)$/i) || [])[1];if (t) {
            var o = { width: 0, height: 0 },
                a = new Image();return a.onload = function () {
              if ("cover" == e.css("background-size")) {
                var t = e.innerWidth(),
                    i = e.innerHeight(),
                    l = t / i;imageAspectRatio = a.width / a.height, scale = 1, imageAspectRatio >= l ? scale = i / a.height : scale = t / a.width, o.width = a.width * scale, o.height = a.height * scale;
              } else o.width = a.width, o.height = a.height;
            }, a.src = t, o;
          }
        }(o)), o.on("mousedown.dbg touchstart.dbg", function (e) {
          if (e.target === o[0]) {
            if (e.preventDefault(), e.originalEvent.touches) i(e);else if (1 !== e.which) return;var l = e.clientX,
                r = e.clientY,
                d = o.css("background-position").match(/(-?\d+).*?\s(-?\d+)/) || [],
                c = parseInt(d[1]) || 0,
                u = parseInt(d[2]) || 0;t.on("mousemove.dbg touchmove.dbg", function (e) {
              e.preventDefault(), e.originalEvent.touches && i(e);var t = e.clientX,
                  d = e.clientY;c = "y" === s.axis ? c : a(o.innerWidth() - n.width, 0, c + t - l, s.bound), u = "x" === s.axis ? u : a(o.innerHeight() - n.height, 0, u + d - r, s.bound), l = t, r = d, o.css("background-position", c + "px " + u + "px");
            }), t.on("mouseup.dbg touchend.dbg mouseleave.dbg", function () {
              s.done && s.done(), t.off("mousemove.dbg touchmove.dbg"), t.off("mouseup.dbg touchend.dbg mouseleave.dbg");
            });
          }
        });
      }
    }, l.prototype.disable = function () {
      e(this.element).off("mousedown.dbg touchstart.dbg"), t.off("mousemove.dbg touchmove.dbg mouseup.dbg touchend.dbg mouseleave.dbg");
    }, e.fn.backgroundDraggable = function (t) {
      t = t;var a = Array.prototype.slice.call(arguments, 1);return this.each(function () {
        var i = e(this);if (void 0 === t || "object" == (void 0 === t ? "undefined" : o(t))) {
          var s = new l(this, t = e.extend({}, e.fn.backgroundDraggable.defaults, t));i.data("dbg", s);
        } else if ("string" == typeof t && i.data("dbg")) {
          s = i.data("dbg");l.prototype[t].apply(s, a);
        }
      });
    }, e.fn.backgroundDraggable.defaults = { bound: !0, axis: void 0 };
  }(jQuery), function () {
    var e,
        t,
        _o,
        a,
        i,
        l,
        s,
        n,
        r,
        d,
        c,
        u,
        m,
        p = function p(e, t) {
      return function () {
        return e.apply(t, arguments);
      };
    },
        h = [].indexOf || function (e) {
      for (var t = 0, o = this.length; t < o; t++) {
        if (t in this && this[t] === e) return t;
      }return -1;
    };e = jQuery, r = "guillotine", i = { start: "touchstart." + (d = "guillotine") + " mousedown." + d, move: "touchmove." + d + " mousemove." + d, stop: "touchend." + d + " mouseup." + d }, a = { width: 400, height: 300, zoomStep: .1, init: null, eventOnChange: null, onChange: null }, c = /touch/i, n = function n(e) {
      return c.test(e.type);
    }, u = function u(e) {
      return n(e) ? 1 === e.originalEvent.changedTouches.length : 1 === e.which;
    }, l = function l(e) {
      return n(e) && (e = e.originalEvent.touches[0]), { x: e.pageX, y: e.pageY };
    }, _o = function o() {
      var e, t, a, i, l, s, n, r, d, c;for (e = !1, n = { transform: "transform" }, d = 0, c = (i = ["webkit", "Moz", "O", "ms", "Khtml"]).length; d < c; d++) {
        n[(a = i[d]) + "Transform"] = "-" + a.toLowerCase() + "-transform";
      }for (s in t = document.createElement("img"), document.body.insertBefore(t, null), n) {
        if (l = n[s], void 0 !== t.style[s] && (t.style[s] = "rotate(90deg)", null != (r = window.getComputedStyle(t).getPropertyValue(l)) && r.length && "none" !== r)) {
          e = !0;break;
        }
      }return document.body.removeChild(t), (_o = e ? function () {
        return !0;
      } : function () {
        return !1;
      })();
    }, s = function s(t) {
      return e(t).css({ "-webkit-perspective": 1e3, perspective: 1e3, "-webkit-backface-visibility": "hidden", "backface-visibility": "hidden" });
    }, t = function () {
      function t(t, o) {
        this._drag = p(this._drag, this), this._unbind = p(this._unbind, this), this._start = p(this._start, this), this.op = e.extend(!0, {}, a, o, e(t).data(r)), this.enabled = !0, this.zoomInFactor = 1 + this.op.zoomStep, this.zoomOutFactor = 1 / this.zoomInFactor, this.glltRatio = this.op.height / this.op.width, this.width = this.height = this.left = this.top = this.angle = 0, this.data = { scale: 1, angle: 0, x: 0, y: 0, w: this.op.width, h: this.op.height }, this._wrap(t), null != this.op.init && this._init(), (this.width < 1 || this.height < 1) && this._fit() && this._center(), s(this.$el), this.$el.on(i.start, this._start);
      }return t.prototype._wrap = function (t) {
        var o, a, i, l, s;return a = e(t), "IMG" === t.tagName ? t.naturalWidth ? (s = t.naturalWidth, l = t.naturalHeight) : (a.addClass("guillotine-sample"), s = a.width(), l = a.height(), a.removeClass("guillotine-sample")) : (s = a.width(), l = a.height()), this.width = s / this.op.width, this.height = l / this.op.height, (o = e("<div>").addClass("guillotine-canvas")).css({ width: 100 * this.width + "%", height: 100 * this.height + "%", top: 0, left: 0 }), o = a.wrap(o).parent(), this.op.height / this.op.width * 100 + "%", (i = e("<div>").addClass("guillotine-window")).css({ width: "100%", height: "auto", "padding-top": "100%" }), i = o.wrap(i).parent(), this.$el = a, this.el = a[0], this.$canvas = o, this.canvas = o[0], this.$gllt = i, this.gllt = i[0], this.$document = e(t.ownerDocument), this.$body = e("body", this.$document);
      }, t.prototype._unwrap = function () {
        return this.$el.removeAttr("style"), this.$el.insertBefore(this.gllt), this.$gllt.remove();
      }, t.prototype._init = function () {
        var e, t, o;return t = this.op.init, (o = parseFloat(t.scale)) && this._zoom(o), (e = parseInt(t.angle)) && this._rotate(e), this._offset(parseInt(t.x) / this.op.width || 0, parseInt(t.y) / this.op.height || 0);
      }, t.prototype._start = function (e) {
        if (this.enabled && u(e)) return e.preventDefault(), e.stopImmediatePropagation(), this.p = l(e), this._bind();
      }, t.prototype._bind = function () {
        return this.$body.addClass("guillotine-dragging"), this.$document.on(i.move, this._drag), this.$document.on(i.stop, this._unbind);
      }, t.prototype._unbind = function (e) {
        if (this.$body.removeClass("guillotine-dragging"), this.$document.off(i.move, this._drag), this.$document.off(i.stop, this._unbind), null != e) return this._trigger("drag");
      }, t.prototype._trigger = function (e) {
        if (null != this.op.eventOnChange && this.$el.trigger(this.op.eventOnChange, [this.data, e]), "function" == typeof this.op.onChange) return this.op.onChange.call(this.el, this.data, e);
      }, t.prototype._drag = function (e) {
        var t, o, a, i, s;return e.preventDefault(), e.stopImmediatePropagation(), t = (i = l(e)).x - this.p.x, o = i.y - this.p.y, this.p = i, a = 0 === t ? null : this.left - t / this.gllt.clientWidth, s = 0 === o ? null : this.top - o / this.gllt.clientHeight, this._offset(a, s);
      }, t.prototype._offset = function (e, t) {
        if ((e || 0 === e) && (e < 0 && (e = 0), e > this.width - 1 && (e = this.width - 1), this.canvas.style.left = (100 * -e).toFixed(2) + "%", this.left = e, this.data.x = Math.round(e * this.op.width)), t || 0 === t) return t < 0 && (t = 0), t > this.height - 1 && (t = this.height - 1), this.canvas.style.top = (100 * -t).toFixed(2) + "%", this.top = t, this.data.y = Math.round(t * this.op.height);
      }, t.prototype._zoom = function (e) {
        var t, o, a, i;if (!(e <= 0 || 1 === e)) return i = this.width, t = this.height, i * e > 1 && t * e > 1 ? (this.width *= e, this.height *= e, this.canvas.style.width = (100 * this.width).toFixed(2) + "%", this.canvas.style.height = (100 * this.height).toFixed(2) + "%", this.data.scale *= e) : (this._fit(), e = this.width / i), o = (this.left + .5) * e - .5, a = (this.top + .5) * e - .5, this._offset(o, a);
      }, t.prototype._fit = function () {
        var e, t;return e = this.width, (t = this.height / this.width) > 1 ? (this.width = 1, this.height = t) : (this.width = 1 / t, this.height = 1), this.canvas.style.width = (100 * this.width).toFixed(2) + "%", this.canvas.style.height = (100 * this.height).toFixed(2) + "%", this.data.scale *= this.width / e;
      }, t.prototype._center = function () {
        return this._offset((this.width - 1) / 2, (this.height - 1) / 2);
      }, t.prototype._rotate = function (e) {
        var t, a, i, l, s, n, r;if (_o() && 0 !== e && e % 90 == 0) return this.angle = (this.angle + e) % 360, this.angle < 0 && (this.angle = 360 + this.angle), e % 180 != 0 && (a = this.op.height / this.op.width, s = [this.height * a, this.width / a], this.width = s[0], this.height = s[1], this.width >= 1 && this.height >= 1 ? (this.canvas.style.width = 100 * this.width + "%", this.canvas.style.height = 100 * this.height + "%") : this._fit()), l = (n = [1, 1])[0], i = n[1], this.angle % 180 != 0 && (l = (r = [t = this.height / this.width * a, 1 / t])[0], i = r[1]), this.el.style.width = 100 * l + "%", this.el.style.height = 100 * i + "%", this.el.style.left = (1 - l) / 2 * 100 + "%", this.el.style.top = (1 - i) / 2 * 100 + "%", this.$el.css({ transform: "rotate(" + this.angle + "deg)" }), this._center(), this.data.angle = this.angle;
      }, t.prototype.rotateLeft = function () {
        return this.enabled && (this._rotate(-90), this._trigger("rotateLeft"));
      }, t.prototype.rotateRight = function () {
        return this.enabled && (this._rotate(90), this._trigger("rotateRight"));
      }, t.prototype.center = function () {
        return this.enabled && (this._center(), this._trigger("center"));
      }, t.prototype.fit = function () {
        return this.enabled && (this._fit(), this._center(), this._trigger("fit"));
      }, t.prototype.zoomIn = function () {
        return this.enabled && (this._zoom(this.zoomInFactor), this._trigger("zoomIn"));
      }, t.prototype.zoomOut = function () {
        return this.enabled && (this._zoom(this.zoomOutFactor), this._trigger("zoomOut"));
      }, t.prototype.getData = function () {
        return this.data;
      }, t.prototype.enable = function () {
        return this.enabled = !0;
      }, t.prototype.disable = function () {
        return this.enabled = !1;
      }, t.prototype.remove = function () {
        return this._unbind(), this._unwrap(), this.disable(), this.$el.off(i.start, this._start), this.$el.removeData(r + "Instance");
      }, t;
    }(), m = ["rotateLeft", "rotateRight", "center", "fit", "zoomIn", "zoomOut", "instance", "getData", "enable", "disable", "remove"], e.fn[r] = function (o) {
      return "string" != typeof o ? this.each(function () {
        var a;if (!e.data(this, r + "Instance")) return a = new t(this, o), e.data(this, r + "Instance", a);
      }) : h.call(m, o) >= 0 ? "instance" === o ? e.data(this[0], r + "Instance") : "getData" === o ? e.data(this[0], r + "Instance")[o]() : this.each(function () {
        var t;if (t = e.data(this, r + "Instance")) return t[o]();
      }) : void 0;
    };
  }.call(this), function (e) {
    "use strict";
    function t(t, o) {
      this.itemsArray = [], this.$element = e(t), this.$element.hide(), this.isSelect = "SELECT" === t.tagName, this.multiple = this.isSelect && t.hasAttribute("multiple"), this.objectItems = o && o.itemValue, this.placeholderText = t.hasAttribute("placeholder") ? this.$element.attr("placeholder") : "", this.inputSize = Math.max(1, this.placeholderText.length), this.$container = e('<div class="bootstrap-tagsinput"></div>'), this.$input = e('<input type="text" placeholder="' + this.placeholderText + '"/>').appendTo(this.$container), this.$element.before(this.$container), this.build(o);
    }function a(e, t) {
      if ("function" != typeof e[t]) {
        var o = e[t];e[t] = function (e) {
          return e[o];
        };
      }
    }function i(e, t) {
      if ("function" != typeof e[t]) {
        var o = e[t];e[t] = function () {
          return o;
        };
      }
    }function l(e) {
      return e ? r.text(e).html() : "";
    }function s(e) {
      var t = 0;if (document.selection) {
        e.focus();var o = document.selection.createRange();o.moveStart("character", -e.value.length), t = o.text.length;
      } else (e.selectionStart || "0" == e.selectionStart) && (t = e.selectionStart);return t;
    }var n = { tagClass: function tagClass(e) {
        return "label label-info";
      }, itemValue: function itemValue(e) {
        return e ? e.toString() : e;
      }, itemText: function itemText(e) {
        return this.itemValue(e);
      }, itemTitle: function itemTitle(e) {
        return null;
      }, freeInput: !0, addOnBlur: !0, maxTags: void 0, maxChars: void 0, confirmKeys: [13, 44], delimiter: ",", delimiterRegex: null, cancelConfirmKeysOnEmpty: !0, onTagExists: function onTagExists(e, t) {
        t.hide().fadeIn();
      }, trimValue: !1, allowDuplicates: !1 };t.prototype = { constructor: t, add: function add(t, a, i) {
        var s = this;if (!(s.options.maxTags && s.itemsArray.length >= s.options.maxTags) && (!1 === t || t)) {
          if ("string" == typeof t && s.options.trimValue && (t = e.trim(t)), "object" == (void 0 === t ? "undefined" : o(t)) && !s.objectItems) throw "Can't add objects when itemValue option is not set";if (!t.toString().match(/^\s*$/)) {
            if (s.isSelect && !s.multiple && s.itemsArray.length > 0 && s.remove(s.itemsArray[0]), "string" == typeof t && "INPUT" === this.$element[0].tagName) {
              var n = s.options.delimiterRegex ? s.options.delimiterRegex : s.options.delimiter,
                  r = t.split(n);if (r.length > 1) {
                for (var d = 0; d < r.length; d++) {
                  this.add(r[d], !0);
                }return void (a || s.pushVal());
              }
            }var c = s.options.itemValue(t),
                u = s.options.itemText(t),
                m = s.options.tagClass(t),
                p = s.options.itemTitle(t),
                h = e.grep(s.itemsArray, function (e) {
              return s.options.itemValue(e) === c;
            })[0];if (!h || s.options.allowDuplicates) {
              if (!(s.items().toString().length + t.length + 1 > s.options.maxInputLength)) {
                var _ = e.Event("beforeItemAdd", { item: t, cancel: !1, options: i });if (s.$element.trigger(_), !_.cancel) {
                  s.itemsArray.push(t);var f = e('<span class="tag ' + l(m) + (null !== p ? '" title="' + p : "") + '">' + l(u) + '<span data-role="remove"></span></span>');if (f.data("item", t), s.findInputWrapper().before(f), f.after(" "), s.isSelect && !e('option[value="' + encodeURIComponent(c) + '"]', s.$element)[0]) {
                    var g = e("<option selected>" + l(u) + "</option>");g.data("item", t), g.attr("value", c), s.$element.append(g);
                  }a || s.pushVal(), (s.options.maxTags === s.itemsArray.length || s.items().toString().length === s.options.maxInputLength) && s.$container.addClass("bootstrap-tagsinput-max"), s.$element.trigger(e.Event("itemAdded", { item: t, options: i }));
                }
              }
            } else if (s.options.onTagExists) {
              var v = e(".tag", s.$container).filter(function () {
                return e(this).data("item") === h;
              });s.options.onTagExists(t, v);
            }
          }
        }
      }, remove: function remove(t, a, i) {
        var l = this;if (l.objectItems && (t = (t = "object" == (void 0 === t ? "undefined" : o(t)) ? e.grep(l.itemsArray, function (e) {
          return l.options.itemValue(e) == l.options.itemValue(t);
        }) : e.grep(l.itemsArray, function (e) {
          return l.options.itemValue(e) == t;
        }))[t.length - 1]), t) {
          var s = e.Event("beforeItemRemove", { item: t, cancel: !1, options: i });if (l.$element.trigger(s), s.cancel) return;e(".tag", l.$container).filter(function () {
            return e(this).data("item") === t;
          }).remove(), e("option", l.$element).filter(function () {
            return e(this).data("item") === t;
          }).remove(), -1 !== e.inArray(t, l.itemsArray) && l.itemsArray.splice(e.inArray(t, l.itemsArray), 1);
        }a || l.pushVal(), l.options.maxTags > l.itemsArray.length && l.$container.removeClass("bootstrap-tagsinput-max"), l.$element.trigger(e.Event("itemRemoved", { item: t, options: i }));
      }, removeAll: function removeAll() {
        var t = this;for (e(".tag", t.$container).remove(), e("option", t.$element).remove(); t.itemsArray.length > 0;) {
          t.itemsArray.pop();
        }t.pushVal();
      }, refresh: function refresh() {
        var t = this;e(".tag", t.$container).each(function () {
          var o = e(this),
              a = o.data("item"),
              i = t.options.itemValue(a),
              s = t.options.itemText(a),
              n = t.options.tagClass(a);(o.attr("class", null), o.addClass("tag " + l(n)), o.contents().filter(function () {
            return 3 == this.nodeType;
          })[0].nodeValue = l(s), t.isSelect) && e("option", t.$element).filter(function () {
            return e(this).data("item") === a;
          }).attr("value", i);
        });
      }, items: function items() {
        return this.itemsArray;
      }, pushVal: function pushVal() {
        var t = this,
            o = e.map(t.items(), function (e) {
          return t.options.itemValue(e).toString();
        });t.$element.val(o, !0).trigger("change");
      }, build: function build(t) {
        var o = this;if (o.options = e.extend({}, n, t), o.objectItems && (o.options.freeInput = !1), a(o.options, "itemValue"), a(o.options, "itemText"), i(o.options, "tagClass"), o.options.typeahead) {
          var l = o.options.typeahead || {};i(l, "source"), o.$input.typeahead(e.extend({}, l, { source: function source(t, a) {
              function i(e) {
                for (var t = [], i = 0; i < e.length; i++) {
                  var l = o.options.itemText(e[i]);s[l] = e[i], t.push(l);
                }a(t);
              }this.map = {};var s = this.map,
                  n = l.source(t);e.isFunction(n.success) ? n.success(i) : e.isFunction(n.then) ? n.then(i) : e.when(n).then(i);
            }, updater: function updater(e) {
              return o.add(this.map[e]), this.map[e];
            }, matcher: function matcher(e) {
              return -1 !== e.toLowerCase().indexOf(this.query.trim().toLowerCase());
            }, sorter: function sorter(e) {
              return e.sort();
            }, highlighter: function highlighter(e) {
              var t = new RegExp("(" + this.query + ")", "gi");return e.replace(t, "<strong>$1</strong>");
            } }));
        }if (o.options.typeaheadjs) {
          var r = null,
              d = {},
              c = o.options.typeaheadjs;e.isArray(c) ? (r = c[0], d = c[1]) : d = c, o.$input.typeahead(r, d).on("typeahead:selected", e.proxy(function (e, t) {
            d.valueKey ? o.add(t[d.valueKey]) : o.add(t), o.$input.typeahead("val", "");
          }, o));
        }o.$container.on("click", e.proxy(function (e) {
          o.$element.attr("disabled") || o.$input.removeAttr("disabled"), o.$input.focus();
        }, o)), o.options.addOnBlur && o.options.freeInput && o.$input.on("focusout", e.proxy(function (t) {
          0 === e(".typeahead, .twitter-typeahead", o.$container).length && (o.add(o.$input.val()), o.$input.val(""));
        }, o)), o.$container.on("keydown", "input", e.proxy(function (t) {
          var a = e(t.target),
              i = o.findInputWrapper();if (o.$element.attr("disabled")) o.$input.attr("disabled", "disabled");else {
            switch (t.which) {case 8:
                if (0 === s(a[0])) {
                  var l = i.prev();l.length && o.remove(l.data("item"));
                }break;case 46:
                if (0 === s(a[0])) {
                  var n = i.next();n.length && o.remove(n.data("item"));
                }break;case 37:
                var r = i.prev();0 === a.val().length && r[0] && (r.before(i), a.focus());break;case 39:
                var d = i.next();0 === a.val().length && d[0] && (d.after(i), a.focus());}var c = a.val().length;Math.ceil(c / 5), a.attr("size", Math.max(this.inputSize, a.val().length));
          }
        }, o)), o.$container.on("keypress", "input", e.proxy(function (t) {
          var a = e(t.target);if (o.$element.attr("disabled")) o.$input.attr("disabled", "disabled");else {
            var i = a.val(),
                l = o.options.maxChars && i.length >= o.options.maxChars;o.options.freeInput && (function (t, o) {
              var a = !1;return e.each(o, function (e, o) {
                if ("number" == typeof o && t.which === o) return a = !0, !1;if (t.which === o.which) {
                  var i = !o.hasOwnProperty("altKey") || t.altKey === o.altKey,
                      l = !o.hasOwnProperty("shiftKey") || t.shiftKey === o.shiftKey,
                      s = !o.hasOwnProperty("ctrlKey") || t.ctrlKey === o.ctrlKey;if (i && l && s) return a = !0, !1;
                }
              }), a;
            }(t, o.options.confirmKeys) || l) && (0 !== i.length && (o.add(l ? i.substr(0, o.options.maxChars) : i), a.val("")), !1 === o.options.cancelConfirmKeysOnEmpty && t.preventDefault());var s = a.val().length;Math.ceil(s / 5), a.attr("size", Math.max(this.inputSize, a.val().length));
          }
        }, o)), o.$container.on("click", "[data-role=remove]", e.proxy(function (t) {
          o.$element.attr("disabled") || o.remove(e(t.target).closest(".tag").data("item"));
        }, o)), o.options.itemValue === n.itemValue && ("INPUT" === o.$element[0].tagName ? o.add(o.$element.val()) : e("option", o.$element).each(function () {
          o.add(e(this).attr("value"), !0);
        }));
      }, destroy: function destroy() {
        var e = this;e.$container.off("keypress", "input"), e.$container.off("click", "[role=remove]"), e.$container.remove(), e.$element.removeData("tagsinput"), e.$element.show();
      }, focus: function focus() {
        this.$input.focus();
      }, input: function input() {
        return this.$input;
      }, findInputWrapper: function findInputWrapper() {
        for (var t = this.$input[0], o = this.$container[0]; t && t.parentNode !== o;) {
          t = t.parentNode;
        }return e(t);
      } }, e.fn.tagsinput = function (o, a, i) {
      var l = [];return this.each(function () {
        var s = e(this).data("tagsinput");if (s) {
          if (o || a) {
            if (void 0 !== s[o]) {
              if (3 === s[o].length && void 0 !== i) var n = s[o](a, null, i);else n = s[o](a);void 0 !== n && l.push(n);
            }
          } else l.push(s);
        } else s = new t(this, o), e(this).data("tagsinput", s), l.push(s), "SELECT" === this.tagName && e("option", e(this)).attr("selected", "selected"), e(this).val(e(this).val());
      }), "string" == typeof o ? l.length > 1 ? l : l[0] : l;
    }, e.fn.tagsinput.Constructor = t;var r = e("<div />");e(function () {
      e("input[data-role=tagsinput], select[multiple][data-role=tagsinput]").tagsinput();
    });
  }(window.jQuery);
}]);

/***/ })

/******/ });